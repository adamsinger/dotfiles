!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"_ddgg	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal "_ddgg$/;"	m
%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
%	.vim/macros/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	.vim/macros/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	.vim/macros/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
,fr	.vim/bundle/vim-scala/ftplugin/scala.vim	/^nnoremap <buffer> <silent> ,fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
,fs	.vim/bundle/vim-scala/ftplugin/scala.vim	/^nnoremap <buffer> <silent> ,fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
,ft	.vim/bundle/vim-scala/ftplugin/scala.vim	/^nnoremap <buffer> <silent> ,ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
,jt	.vim/bundle/vim-scala/after/plugin/help.vim	/^nmap ,jt :call JustifyCurrentLine()<cr>$/;"	m
:	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^map: <c-_>i or <c-_>I$/;"	m
<A-r>e	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^nmap <A-r>e :call ErlangExtractFunction("n")<ENTER>$/;"	m
<A-r>e	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^vmap <A-r>e :call ErlangExtractFunction("v")<ENTER>$/;"	m
<A-r>f	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^map <A-r>f :call ErlangRenameFunction()<ENTER>$/;"	m
<A-r>m	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^map <A-r>m :call ErlangRenameModule()<ENTER>$/;"	m
<A-r>p	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^map <A-r>p :call ErlangRenameProcess()<ENTER>$/;"	m
<A-r>t	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^nmap <A-r>t :call ErlangTupleFunArgs("n")<ENTER>$/;"	m
<A-r>t	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^vmap <A-r>t :call ErlangTupleFunArgs("v")<ENTER>$/;"	m
<A-r>v	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^map <A-r>v :call ErlangRenameVariable()<ENTER>$/;"	m
<C-G>S	.vim/bundle/vim-surround/plugin/surround.vim	/^  imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	.vim/bundle/vim-surround/plugin/surround.vim	/^  imap      <C-G>s <Plug>Isurround$/;"	m
<C-S>	.vim/bundle/vim-surround/plugin/surround.vim	/^    imap    <C-S> <Plug>Isurround$/;"	m
<C-X><CR>	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  imap <C-X><CR> <CR><Plug>AlwaysEnd$/;"	m
<CR>	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  imap <CR>      <CR><Plug>DiscretionaryEnd$/;"	m
<M-o>	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <M-o> <C-O>o$/;"	m
<Plug>(neocomplcache_snippets_expand)	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^inoremap <silent><expr> <Plug>(neocomplcache_snippets_expand)$/;"	m
<Plug>(neocomplcache_snippets_expand)	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^inoremap <unique> <Plug>(neocomplcache_snippets_expand)$/;"	m
<Plug>(neocomplcache_snippets_force_expand)	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^inoremap <silent><expr> <Plug>(neocomplcache_snippets_force_expand)$/;"	m
<Plug>(neocomplcache_snippets_force_expand)	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^inoremap <unique> <Plug>(neocomplcache_snippets_force_expand)$/;"	m
<Plug>(neocomplcache_snippets_force_jump)	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^inoremap <silent><expr> <Plug>(neocomplcache_snippets_force_jump)$/;"	m
<Plug>(neocomplcache_snippets_force_jump)	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^inoremap <unique> <Plug>(neocomplcache_snippets_force_jump)$/;"	m
<Plug>(neocomplcache_snippets_jump)	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^inoremap <silent><expr> <Plug>(neocomplcache_snippets_jump)$/;"	m
<Plug>(neocomplcache_snippets_jump)	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^inoremap <unique> <Plug>(neocomplcache_snippets_jump)$/;"	m
<Plug>AlwaysEnd	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>AlwaysEnd        <SID>AlwaysEnd$/;"	m
<Plug>Csurround	.vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>DiscretionaryEnd	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>DiscretionaryEnd <SID>DiscretionaryEnd$/;"	m
<Plug>Dsurround	.vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	.vim/bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	.vim/bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>VSurround	.vim/bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	.vim/bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	.vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	.vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	.vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	.vim/bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<SID>AlwaysEnd	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>AlwaysEnd        <C-R>=<SID>crend(1)<CR>$/;"	m
<SID>DiscretionaryEnd	.vim/bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>DiscretionaryEnd <C-R>=<SID>crend(0)<CR>$/;"	m
<SID>xx	.vim/bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
ABOVE_NORMAL_PRIORITY_CLASS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^ABOVE_NORMAL_PRIORITY_CLASS = 0x00008000$/;"	v
AO	.vim/bundle/vimerl/test/test.erl	/^-define(AO(Aeu), ok).$/;"	d
AR	.vim/ruby/command-t/Makefile	/^AR = ar$/;"	m
AUTOL	.vim/bundle/delimitMate/Makefile	/^AUTOL=autoload\/$(PLUGIN).vim$/;"	m
Abbrev	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
Ack	.vim/bundle/vim-ack/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack call s:Ack('grep<bang>',<q-args>)$/;"	c
Ack	.vim/bundle/vim-ack/plugin/ack.vim	/^function! s:Ack(cmd, args)$/;"	f
AckAdd	.vim/bundle/vim-ack/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd call s:Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	.vim/bundle/vim-ack/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile call s:Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	.vim/bundle/vim-ack/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call s:AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckFromSearch	.vim/bundle/vim-ack/plugin/ack.vim	/^function! s:AckFromSearch(cmd, args)$/;"	f
AddBracketExpand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddDivider	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! s:AddDivider(text, side, color, ...) " {{{$/;"	f
AddParenExpand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddSelectiveExpand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
Alternate	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
AssertEquals	.vim/bundle/vim-conque/tests/test.vim	/^function! AssertEquals(a, b) " {{{$/;"	f
AssertFalse	.vim/bundle/vim-conque/tests/test.vim	/^function! AssertFalse(a) " {{{$/;"	f
AssertTrue	.vim/bundle/vim-conque/tests/test.vim	/^function! AssertTrue(a) " {{{$/;"	f
AutoClose	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
AutoToggleLocList	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:AutoToggleLocList()$/;"	f
BELOW_NORMAL_PRIORITY_CLASS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^BELOW_NORMAL_PRIORITY_CLASS = 0x00004000$/;"	v
BINDIR	.vim/ruby/command-t/Makefile	/^BINDIR        = $(bindir)$/;"	m
Bar	.vim/bundle/vim-textobj-rubyblock/test/examples.rb	/^  class Bar$/;"	c	class:Foo
Baz	.vim/bundle/vim-textobj-rubyblock/test/examples.rb	/^    def Baz$/;"	f	class:Foo.Bar
Blame	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockGetCommentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cms)$/;"	f
BlockGetMiddleString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cms)$/;"	f
Bookmark.AddBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufAbbreviations	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufFinderCommands	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufFinderCommands()$/;"	f
BufHasErrors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:BufHasErrors()$/;"	f
BufHasErrorsOrWarnings	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:BufHasErrorsOrWarnings()$/;"	f
BufHasErrorsOrWarningsToDisplay	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:BufHasErrorsOrWarningsToDisplay()$/;"	f
BufInit	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufMappings	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufModelines	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufModelines()$/;"	f
BufNavCommands	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufReadIndex	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufScriptWrappers	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSignIds	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:BufSignIds()$/;"	f
BufSyntax	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWriteIndexFile	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BufferFinder	.vim/ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferScanner	.vim/ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
BuildNewTableOfContents	.vim/bundle/vim-scala/after/plugin/help.vim	/^command! BuildNewTableOfContents silent! call BuildTOC()$/;"	c
BuildTOC	.vim/bundle/vim-scala/after/plugin/help.vim	/^function! BuildTOC()$/;"	f
Bundle	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:Bundle(bang,arg)$/;"	f
BundleComplete	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:BundleComplete(A,L,P)$/;"	f
CAPSLOCK_ON	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CAPSLOCK_ON = 0x0080$/;"	v
CC	.vim/ruby/command-t/Makefile	/^CC = gcc$/;"	m
CFLAGS	.vim/ruby/command-t/Makefile	/^CFLAGS   =  -fno-common -arch i386 -arch x86_64 -g -Os -pipe -fno-common -DENABLE_DTRACE  -fno-common  -pipe -fno-common $(cflags) $/;"	m
CHAR_INFO	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class CHAR_INFO(Structure):$/;"	c
CHAR_UNION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class CHAR_UNION(Union):$/;"	c
CLEANFILES	.vim/ruby/command-t/Makefile	/^CLEANFILES = mkmf.log$/;"	m
CLEANLIBS	.vim/ruby/command-t/Makefile	/^CLEANLIBS     = $(TARGET).bundle $(TARGET).il? $(TARGET).tds $(TARGET).map$/;"	m
CLEANOBJS	.vim/ruby/command-t/Makefile	/^CLEANOBJS     = *.o *.a *.s[ol] *.pdb *.exp *.bak$/;"	m
CONQUE_COLOR_SEQUENCE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_COLOR_SEQUENCE = ($/;"	v
CONQUE_CTL	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_CTL = {$/;"	v
CONQUE_ESCAPE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE = {$/;"	v
CONQUE_ESCAPE_CHARSET	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_CHARSET = {$/;"	v
CONQUE_ESCAPE_HASH	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_HASH = {$/;"	v
CONQUE_ESCAPE_PLAIN	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_PLAIN = {$/;"	v
CONQUE_ESCAPE_QUESTION	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_QUESTION = {$/;"	v
CONQUE_FONT	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_FONT = {$/;"	v
CONQUE_GRAPHICS_SET	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_GRAPHICS_SET = [$/;"	v
CONQUE_LOG_FILENAME	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^    CONQUE_LOG_FILENAME = 'C:\/Documents and Settings\/nraffo\/vimfiles\/pylog.log' # DEBUG$/;"	v
CONQUE_LOG_FILENAME	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^    CONQUE_LOG_FILENAME = '\/Users\/nraffo\/vimfiles\/pylog.log' # DEBUG$/;"	v
CONQUE_LOG_FILENAME	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_LOG_FILENAME = None # DEBUG$/;"	v
CONQUE_LOG_LEVEL	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_LOG_LEVEL = logging.INFO #DEBUG$/;"	v
CONQUE_MAX_SYNTAX_LINES	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_MAX_SYNTAX_LINES = 200$/;"	v
CONQUE_PYTHON_VERSION	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_PYTHON_VERSION	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_SEQ_REGEX	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX = re.compile("(\\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\\x1b\\][0-9];.*?\\x07|[\\x01-\\x0f]|\\x1b\\([AB0])")$/;"	v
CONQUE_SEQ_REGEX_CHAR	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CHAR = re.compile("^\\x1b[()]")$/;"	v
CONQUE_SEQ_REGEX_CSI	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CSI = re.compile("^\\x1b\\[")$/;"	v
CONQUE_SEQ_REGEX_CTL	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CTL = re.compile("^[\\x01-\\x0f]$")$/;"	v
CONQUE_SEQ_REGEX_ESC	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_ESC = re.compile("^\\x1b.$")$/;"	v
CONQUE_SEQ_REGEX_HASH	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_HASH = re.compile("^\\x1b#")$/;"	v
CONQUE_SEQ_REGEX_TITLE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_TITLE = re.compile("^\\x1b\\]")$/;"	v
CONQUE_SOLE_BUFFER_LENGTH	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_LENGTH = 1000$/;"	v
CONQUE_SOLE_BUFFER_REDRAW	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_REDRAW = 500$/;"	v
CONQUE_SOLE_COMMANDS_SIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_COMMANDS_SIZE = 255$/;"	v
CONQUE_SOLE_INPUT_SIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_INPUT_SIZE = 1000$/;"	v
CONQUE_SOLE_MEM_REDRAW	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_MEM_REDRAW = 1000$/;"	v
CONQUE_SOLE_RESCROLL_SIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESCROLL_SIZE = 255$/;"	v
CONQUE_SOLE_RESIZE_SIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESIZE_SIZE = 255$/;"	v
CONQUE_SOLE_SCREEN_REDRAW	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_SCREEN_REDRAW = 50$/;"	v
CONQUE_SOLE_STATS_SIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_STATS_SIZE = 1000$/;"	v
CONQUE_TABLE_OUTPUT	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_TABLE_OUTPUT = re.compile("^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$")$/;"	v
CONQUE_VIM_ENCODING	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = 'utf-8'$/;"	v
CONQUE_VIM_ENCODING	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = vim.eval('&encoding')$/;"	v
CONQUE_VK_ATTR_CTRL_PRESSED	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_VK_ATTR_CTRL_PRESSED = u('1024')$/;"	v
CONQUE_WIN32_REGEX_ATTR	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_ATTR = re.compile("((.)\\\\2*)", re.DOTALL)$/;"	v
CONQUE_WIN32_REGEX_VK	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_VK = re.compile("(\\x1b\\[[0-9;]+VK)")$/;"	v
CONQUE_WINDOWS_VK	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK = {$/;"	v
CONQUE_WINDOWS_VK_ENHANCED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_ENHANCED = {$/;"	v
CONQUE_WINDOWS_VK_INV	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_INV = dict([v, k] for k, v in CONQUE_WINDOWS_VK.items())$/;"	v
CONSOLE_SCREEN_BUFFER_INFO	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class CONSOLE_SCREEN_BUFFER_INFO(Structure):$/;"	c
COORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class COORD(Structure):$/;"	c
COPY	.vim/ruby/command-t/Makefile	/^COPY = cp$/;"	m
CPPFLAGS	.vim/ruby/command-t/Makefile	/^CPPFLAGS = -DHAVE_RUBY_H  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE $(DEFS) $(cppflags)$/;"	m
CREATE_BREAKAWAY_FROM_JOB	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_BREAKAWAY_FROM_JOB = 0x01000000$/;"	v
CREATE_DEFAULT_ERROR_MODE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_DEFAULT_ERROR_MODE = 0x04000000$/;"	v
CREATE_NEW_CONSOLE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_CONSOLE = 0x00000010$/;"	v
CREATE_NEW_PROCESS_GROUP	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_PROCESS_GROUP = 0x00000200$/;"	v
CREATE_NO_WINDOW	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_NO_WINDOW = 0x08000000$/;"	v
CREATE_PRESERVE_CODE_AUTHZ_LEVEL	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x02000000$/;"	v
CREATE_PROTECTED_PROCESS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_PROTECTED_PROCESS = 0x00040000$/;"	v
CREATE_SEPARATE_WOW_VDM	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_SEPARATE_WOW_VDM = 0x00000800$/;"	v
CREATE_SHARED_WOW_VDM	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_SHARED_WOW_VDM = 0x00001000$/;"	v
CREATE_SUSPENDED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_SUSPENDED = 0x00000004$/;"	v
CREATE_UNICODE_ENVIRONMENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^CREATE_UNICODE_ENVIRONMENT = 0x00000400$/;"	v
CXXFLAGS	.vim/ruby/command-t/Makefile	/^CXXFLAGS = $(CFLAGS) $/;"	m
CacheErrors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:CacheErrors()$/;"	f
Checkable	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:Checkable(ft)$/;"	f
Choose	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
Choose	.vim/macros/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
CleanUp	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
CleanUp	.vim/macros/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
ClearErrorHighlights	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:ClearErrorHighlights()$/;"	f
ClearLocList	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:ClearLocList()$/;"	f
CommandEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd,name,prefix,suffix,filter,default,...)$/;"	f
CommandList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommandT	.vim/plugin/command-t.vim	/^command -nargs=? -complete=dir CommandT call <SID>CommandTShowFileFinder(<q-args>)$/;"	c
CommandT	.vim/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/finder/jump_finder.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/scanner/jump_scanner.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	.vim/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTAcceptSelection	.vim/plugin/command-t.vim	/^function CommandTAcceptSelection()$/;"	f
CommandTAcceptSelectionSplit	.vim/plugin/command-t.vim	/^function CommandTAcceptSelectionSplit()$/;"	f
CommandTAcceptSelectionTab	.vim/plugin/command-t.vim	/^function CommandTAcceptSelectionTab()$/;"	f
CommandTAcceptSelectionVSplit	.vim/plugin/command-t.vim	/^function CommandTAcceptSelectionVSplit()$/;"	f
CommandTBackspace	.vim/plugin/command-t.vim	/^function CommandTBackspace()$/;"	f
CommandTBuffer	.vim/plugin/command-t.vim	/^command CommandTBuffer call <SID>CommandTShowBufferFinder()$/;"	c
CommandTCancel	.vim/plugin/command-t.vim	/^function CommandTCancel()$/;"	f
CommandTClear	.vim/plugin/command-t.vim	/^function CommandTClear()$/;"	f
CommandTCursorEnd	.vim/plugin/command-t.vim	/^function CommandTCursorEnd()$/;"	f
CommandTCursorLeft	.vim/plugin/command-t.vim	/^function CommandTCursorLeft()$/;"	f
CommandTCursorRight	.vim/plugin/command-t.vim	/^function CommandTCursorRight()$/;"	f
CommandTCursorStart	.vim/plugin/command-t.vim	/^function CommandTCursorStart()$/;"	f
CommandTDelete	.vim/plugin/command-t.vim	/^function CommandTDelete()$/;"	f
CommandTFlush	.vim/plugin/command-t.vim	/^command CommandTFlush call <SID>CommandTFlush()$/;"	c
CommandTFlush	.vim/plugin/command-t.vim	/^function s:CommandTFlush()$/;"	f
CommandTHandleKey	.vim/plugin/command-t.vim	/^function CommandTHandleKey(arg)$/;"	f
CommandTJump	.vim/plugin/command-t.vim	/^command CommandTJump call <SID>CommandTShowJumpFinder()$/;"	c
CommandTMatch_initialize	.vim/ruby/command-t/match.c	/^VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatch_matches	.vim/ruby/command-t/match.c	/^VALUE CommandTMatch_matches(VALUE self)$/;"	f
CommandTMatch_to_s	.vim/ruby/command-t/match.c	/^VALUE CommandTMatch_to_s(VALUE self)$/;"	f
CommandTMatcher_initialize	.vim/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_matches_for	.vim/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev)$/;"	f
CommandTMatcher_sorted_matches_for	.vim/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options)$/;"	f
CommandTRubyWarning	.vim/plugin/command-t.vim	/^function s:CommandTRubyWarning()$/;"	f
CommandTSelectNext	.vim/plugin/command-t.vim	/^function CommandTSelectNext()$/;"	f
CommandTSelectPrev	.vim/plugin/command-t.vim	/^function CommandTSelectPrev()$/;"	f
CommandTShowBufferFinder	.vim/plugin/command-t.vim	/^function s:CommandTShowBufferFinder()$/;"	f
CommandTShowFileFinder	.vim/plugin/command-t.vim	/^function s:CommandTShowFileFinder(arg)$/;"	f
CommandTShowJumpFinder	.vim/plugin/command-t.vim	/^function s:CommandTShowJumpFinder()$/;"	f
CommandTToggleFocus	.vim/plugin/command-t.vim	/^function CommandTToggleFocus()$/;"	f
CommandT_option_from_hash	.vim/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
CommentBlock	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, uncomment, checkRx, replace, indentStr)$/;"	f
CommentDef	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
CommentLines	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:CommentLines(beg, end, cstart, cend, uncomment, cmtCheck, cms0, indentStr) "{{{3$/;"	f
CommentMode	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:CommentMode(commentMode, newmode) "{{{3$/;"	f
Commit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompilerSet	.vim/bundle/vimerl/compiler/erlang.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete_cd	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_rake	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_rake(A,L,P)$/;"	f
Complete_related	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
Complete_set	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_set(A,L,P)$/;"	f
Conque	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^class Conque:$/;"	c
ConqueScreen	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^class ConqueScreen(object):$/;"	c
ConqueSole	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^class ConqueSole(Conque):$/;"	c
ConqueSoleSharedMemory	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^class ConqueSoleSharedMemory():$/;"	c
ConqueSoleSubprocess	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^class ConqueSoleSubprocess():$/;"	c
ConqueSoleWrapper	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^class ConqueSoleWrapper():$/;"	c
ConqueSubprocess	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^class ConqueSubprocess:$/;"	c
ConqueTerm	.vim/bundle/vim-conque/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTerm call conque_term#open(<q-args>)$/;"	c
ConqueTermSplit	.vim/bundle/vim-conque/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermSplit call conque_term#open(<q-args>, ['belowright split'])$/;"	c
ConqueTermTab	.vim/bundle/vim-conque/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermTab call conque_term#open(<q-args>, ['tabnew'])$/;"	c
ConqueTermVSplit	.vim/bundle/vim-conque/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermVSplit call conque_term#open(<q-args>, ['belowright vsplit'])$/;"	c
ConstructFromComments	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
Controller	.vim/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
Count	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	.vim/macros/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountFunArgs	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	function s:CountFunArgs(arguments)$/;"	f
CreateHiGroup	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! s:CreateHiGroup(hi) " {{{$/;"	f
CreateMenus	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:CreateMenus() abort$/;"	f
CustomComplete	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
Cycle	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DEBUG	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^import time # DEBUG$/;"	i
DEBUG	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import logging # DEBUG$/;"	i
DEBUG	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import os # DEBUG$/;"	i
DEBUG	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import traceback # DEBUG$/;"	i
DEBUG_ONLY_THIS_PROCESS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^DEBUG_ONLY_THIS_PROCESS = 0x00000002$/;"	v
DEBUG_PROCESS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^DEBUG_PROCESS = 0x00000001$/;"	v
DEFFILE	.vim/ruby/command-t/Makefile	/^DEFFILE = $/;"	m
DEFS	.vim/ruby/command-t/Makefile	/^DEFS     = $/;"	m
DETACHED_PROCESS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^DETACHED_PROCESS = 0x00000008$/;"	v
DISTCLEANFILES	.vim/ruby/command-t/Makefile	/^DISTCLEANFILES = $/;"	m
DLDFLAGS	.vim/ruby/command-t/Makefile	/^DLDFLAGS = $(ldflags) $(dldflags) $(archflag)$/;"	m
DLLIB	.vim/ruby/command-t/Makefile	/^DLLIB = $(TARGET).bundle$/;"	m
DOC	.vim/bundle/delimitMate/Makefile	/^DOC=$(wildcard doc\/*.txt)$/;"	m
DefaultValue	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DelimitMateDo	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateDo(...) "{{{$/;"	f
DelimitMateReload	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:DelimitMateDo(1)$/;"	c
DelimitMateSwitch	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:DelimitMateSwitch()$/;"	c
DelimitMateSwitch	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateSwitch() "{{{$/;"	f
DelimitMateTest	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest call s:TestMappingsDo()$/;"	c
Detect	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:Detect(path)$/;"	f
Detect	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Detect(path)$/;"	f
Detect	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
Detect	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Detect(path)$/;"	f
Diff	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...) abort$/;"	f
DiffGitCached	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DirComplete	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DirComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Doc	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Doc(bang, string)$/;"	f
ENHANCED_KEY	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^ENHANCED_KEY = 0x0100$/;"	v
EXEEXT	.vim/ruby/command-t/Makefile	/^EXEEXT = $/;"	m
EXTENDED_STARTUPINFO_PRESENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^EXTENDED_STARTUPINFO_PRESENT = 0x00080000$/;"	v
EXTSTATIC	.vim/ruby/command-t/Makefile	/^EXTSTATIC = $/;"	m
EchoCurrentError	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:EchoCurrentError()$/;"	f
Edit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
Edit	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^command! -buffer -bar Edit   :call s:choose('edit')$/;"	c
Edit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
Edit	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Edit(cmd,bang,file)$/;"	f
EditComplete	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EditSimpleRb	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:EditSimpleRb(cmd,name,target,prefix,suffix,...)$/;"	f
EncodeCommentPart	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndRx	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:EndRx(pos)$/;"	f
ErlangExtractFunction	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangExtractFunction(mode) range$/;"	f
ErlangFoldText	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	function ErlangFoldText()$/;"	f
ErlangIndent	.vim/bundle/vimerl/indent/erlang.vim	/^function ErlangIndent()$/;"	f
ErlangIndentAfterLine	.vim/bundle/vimerl/indent/erlang.vim	/^function s:ErlangIndentAfterLine(l)$/;"	f
ErlangRename	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangRename(mode)$/;"	f
ErlangRenameFunction	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangRenameFunction()$/;"	f
ErlangRenameModule	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangRenameModule()$/;"	f
ErlangRenameProcess	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangRenameProcess()$/;"	f
ErlangRenameVariable	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangRenameVariable()$/;"	f
ErlangTupleFunArgs	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangTupleFunArgs(mode)$/;"	f
ErlangUndo	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! ErlangUndo()$/;"	f
Errors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^command! Errors call s:ShowLocList()$/;"	c
Errors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:Errors()$/;"	f
ErrorsForType	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:ErrorsForType(type)$/;"	f
ExecuteInTree	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExtraMappings	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
Extract	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractCommentsPart	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractGitDir	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
FILL_CHAR	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    FILL_CHAR = None$/;"	v	class:ConqueSoleSharedMemory
FOCUS_EVENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^FOCUS_EVENT = 0x0010$/;"	v
FOCUS_EVENT_RECORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class FOCUS_EVENT_RECORD(Structure):$/;"	c
FOO	.vim/bundle/vimerl/test/test.erl	/^-define(FOO, false).$/;"	d
FOO	.vim/bundle/vimerl/test/test.erl	/^-define(FOO, true).$/;"	d
FileFinder	.vim/ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileLimitExceeded	.vim/ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileRead	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileScanner	.vim/ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
FilterLocList	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:FilterLocList(filters, ...)$/;"	f
Find	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBundlerRoot	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:FindBundlerRoot(path) abort$/;"	f
FindInParent	.vim/bundle/vim-syntastic/syntax_checkers/haxe.vim	/^function! s:FindInParent(fln,flsrt,flstp)$/;"	f
FindPrevNonBlankNonComment	.vim/bundle/vimerl/indent/erlang.vim	/^function s:FindPrevNonBlankNonComment(lnum)$/;"	f
FindRakeRoot	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:FindRakeRoot(path) abort$/;"	f
Findcomplete	.vim/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Finder	.vim/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
Finish	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Finish() " {{{$/;"	f
FinishCommit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FixTOCLine	.vim/bundle/vim-scala/after/plugin/help.vim	/^function! FixTOCLine(beginning, colonCol)$/;"	f
Fixup	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^command! -buffer -bar Fixup  :call s:choose('fixup')$/;"	c
FlushBuffer	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:FlushBuffer() " {{{$/;"	f
Foo	.vim/bundle/vim-textobj-rubyblock/test/examples.rb	/^class Foo$/;"	c
Foo	.vim/bundle/vim-textobj-rubyblock/test/examples.rb	/^module Foo$/;"	m
GF	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetCommentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:GetCommentString(beg, end, commentMode, ...)$/;"	f
GetCustomCommentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetErlangFold	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	function GetErlangFold(lnum)$/;"	f
GetFunArgs	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	function s:GetFunArgs(str, lnum)$/;"	f
GetFunName	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	function s:GetFunName(str)$/;"	f
GetGitconfigIndent	.vim/bundle/vim-git/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetHamlIndent	.vim/bundle/vim-haml/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHi	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! s:GetHi(type, args) " {{{$/;"	f
GetIncludeDirs	.vim/bundle/vim-syntastic/syntax_checkers/c.vim	/^function! s:GetIncludeDirs()$/;"	f
GetIndentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetNextNonBlank	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	function s:GetNextNonBlank(lnum)$/;"	f
GetPHPCSErrors	.vim/bundle/vim-syntastic/syntax_checkers/php.vim	/^function! s:GetPHPCSErrors()$/;"	f
GetSassIndent	.vim/bundle/vim-haml/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScalaIndent	.vim/bundle/vim-scala/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetShell	.vim/bundle/vim-syntastic/syntax_checkers/sh.vim	/^function! s:GetShell()$/;"	f
GetValaModules	.vim/bundle/vim-syntastic/syntax_checkers/vala.vim	/^function! s:GetValaModules()$/;"	f
Git	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
Grep	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
GroupHandler	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! s:GroupHandler(type, args, side, matches, ...) " {{{$/;"	f
GuessCurrentCommentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
HIGH_PRIORITY_CLASS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^HIGH_PRIORITY_CLASS = 0x00000080$/;"	v
Helptags	.vim/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiDefaults	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
HighlightErlangErrors	.vim/bundle/vimerl/compiler/erlang.vim	/^function! HighlightErlangErrors()$/;"	f
HlExists	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! s:HlExists(hl) " {{{$/;"	f
IDLE_PRIORITY_CLASS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^IDLE_PRIORITY_CLASS = 0x00000040$/;"	v
INCFLAGS	.vim/ruby/command-t/Makefile	/^INCFLAGS = -I. -I$(topdir) -I$(hdrdir) -I$(srcdir)$/;"	m
INHERIT_PARENT_AFFINITY	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^INHERIT_PARENT_AFFINITY = 0x00010000$/;"	v
INPUT_RECORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class INPUT_RECORD(Structure):$/;"	c
INPUT_UNION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class INPUT_UNION(Union):$/;"	c
INSTALL	.vim/ruby/command-t/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALLATION_DIR	.vim/bundle/vim-textobj-user/Makefile	/^INSTALLATION_DIR := $(HOME)\/.vim$/;"	m
INSTALL_DATA	.vim/ruby/command-t/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROG	.vim/ruby/command-t/Makefile	/^INSTALL_PROG = $(INSTALL) -m 0755$/;"	m
Init	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! s:Init()$/;"	f
InitOptions	.vim/bundle/vim-powerline/plugin/Powerline.vim	/^	function! s:InitOptions(options) " {{{$/;"	f
Init_ext	.vim/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
InsertRefs	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsertRefs	.vim/macros/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
Invert	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
JumpFinder	.vim/ruby/command-t/finder/jump_finder.rb	/^  class JumpFinder < Finder$/;"	c	class:CommandT
JumpInit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpScanner	.vim/ruby/command-t/scanner/jump_scanner.rb	/^  class JumpScanner < Scanner$/;"	c	class:CommandT
JustifyCurrentLine	.vim/bundle/vim-scala/after/plugin/help.vim	/^function! JustifyCurrentLine()$/;"	f
K	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
KEY_EVENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^KEY_EVENT = 0x0001$/;"	v
KEY_EVENT_RECORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class KEY_EVENT_RECORD(Structure):$/;"	c
KeyMap.Add	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KeyMap_Invoke	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap_Invoke(key)$/;"	f
LAck	.vim/bundle/vim-ack/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck call s:Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	.vim/bundle/vim-ack/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd call s:Ack('lgrepadd<bang>', <q-args>)$/;"	c
LDSHARED	.vim/ruby/command-t/Makefile	/^LDSHARED = cc -arch i386 -arch x86_64 -pipe -bundle -undefined dynamic_lookup$/;"	m
LEFT_ALT_PRESSED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^LEFT_ALT_PRESSED = 0x0002$/;"	v
LEFT_CTRL_PRESSED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^LEFT_CTRL_PRESSED = 0x0008$/;"	v
LIBPATH	.vim/ruby/command-t/Makefile	/^LIBPATH =  -L. -L$(libdir)$/;"	m
LIBRUBY	.vim/ruby/command-t/Makefile	/^LIBRUBY = $(LIBRUBY_SO)$/;"	m
LIBRUBYARG_SHARED	.vim/ruby/command-t/Makefile	/^LIBRUBYARG_SHARED = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBYARG_STATIC	.vim/ruby/command-t/Makefile	/^LIBRUBYARG_STATIC = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBY_A	.vim/ruby/command-t/Makefile	/^LIBRUBY_A = lib$(RUBY_SO_NAME)-static.a$/;"	m
LIBS	.vim/ruby/command-t/Makefile	/^LIBS = $(LIBRUBYARG_SHARED)  -lpthread -ldl  $/;"	m
LOCAL_LIBS	.vim/ruby/command-t/Makefile	/^LOCAL_LIBS = $/;"	m
LPBYTE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^LPBYTE = POINTER(c_ubyte)$/;"	v
LPTSTR	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^LPTSTR = POINTER(c_char)$/;"	v
LocList	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:LocList()$/;"	f
LocalModelines	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:LocalModelines(lnum)$/;"	f
Log	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Log	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MAKEDIRS	.vim/ruby/command-t/Makefile	/^MAKEDIRS = mkdir -p$/;"	m
MEMORY_BASIC_INFORMATION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class MEMORY_BASIC_INFORMATION(Structure):$/;"	c
MENU_EVENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^MENU_EVENT = 0x0008$/;"	v
MENU_EVENT_RECORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class MENU_EVENT_RECORD(Structure):$/;"	c
MOUSE_EVENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^MOUSE_EVENT = 0x0002$/;"	v
MOUSE_EVENT_RECORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class MOUSE_EVENT_RECORD(Structure):$/;"	c
Map	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
MatchDebug	.vim/bundle/vim-matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchDebug	.vim/macros/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchWindow	.vim/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
Match_debug	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_debug	.vim/macros/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	.vim/bundle/vim-matchit/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
Match_wrapper	.vim/macros/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
MenuController.New	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
ModeMapAllowsAutoChecking	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:ModeMapAllowsAutoChecking()$/;"	f
Move	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MultiMatch	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiMatch	.vim/macros/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MyCB	.vim/bundle/vim-conque/tests/api.vim	/^function! MyCB(output)$/;"	f
MyCap	.vim/bundle/vim-conque/tests/test_insert.vim	/^function! MyCap()$/;"	f
NERDTree	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTreeAddKeyMap	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeClose	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	.vim/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	.vim/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFocus	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeHijackNetrw	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeMoveNode	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
NORMAL_PRIORITY_CLASS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^NORMAL_PRIORITY_CLASS = 0x00000020$/;"	v
NUMLOCK_ON	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^NUMLOCK_ON = 0x0020$/;"	v
Navcommand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NeoComplCacheDisable	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 NeoComplCacheDisable call neocomplcache#disable()$/;"	c
NeoComplCacheEnable	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 NeoComplCacheEnable call neocomplcache#enable()$/;"	c
NeoComplCacheLock	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 NeoComplCacheLock call neocomplcache#lock()$/;"	c
NeoComplCacheLockSource	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 NeoComplCacheLockSource call neocomplcache#lock_source(<q-args>)$/;"	c
NeoComplCacheToggle	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 NeoComplCacheToggle call neocomplcache#toggle_lock()$/;"	c
NeoComplCacheUnlock	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 NeoComplCacheUnlock call neocomplcache#unlock()$/;"	c
NeoComplCacheUnlockSource	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 NeoComplCacheUnlockSource call neocomplcache#unlock_source(<q-args>)$/;"	c
NoAutoClose	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
OBJS	.vim/ruby/command-t/Makefile	/^OBJS = ext.o match.o matcher.o$/;"	m
Open	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:Open(cmd,gem,lcd)$/;"	f
OpenComplete	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:OpenComplete(A,L,P)$/;"	f
Opener.New	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Opener.open(target)$/;"	f
PLUGIN	.vim/bundle/delimitMate/Makefile	/^PLUGIN=$(shell basename "$$PWD")$/;"	m
PROCESS_CREATE_PROCESS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_PROCESS = 0x0080$/;"	v
PROCESS_CREATE_THREAD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_THREAD = 0x0002$/;"	v
PROCESS_DUP_HANDLE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_DUP_HANDLE = 0x0040$/;"	v
PROCESS_INFORMATION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class PROCESS_INFORMATION(Structure):$/;"	c
PROCESS_QUERY_INFORMATION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_INFORMATION = 0x0400$/;"	v
PROCESS_QUERY_LIMITED_INFORMATION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_LIMITED_INFORMATION = 0x1000$/;"	v
PROCESS_SET_INFORMATION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_INFORMATION = 0x0200$/;"	v
PROCESS_SET_QUOTA	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_QUOTA = 0x0100$/;"	v
PROCESS_SUSPEND_RESUME	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_SUSPEND_RESUME = 0x0800$/;"	v
PROCESS_TERMINATE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_TERMINATE = 0x0001$/;"	v
PROCESS_VM_OPERATION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_OPERATION = 0x0008$/;"	v
PROCESS_VM_READ	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_READ = 0x0010$/;"	v
PROCESS_VM_WRITE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_WRITE = 0x0020$/;"	v
ParseChars	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! s:ParseChars(arg) " {{{$/;"	f
ParseSkip	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseSkip	.vim/macros/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseWords	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
ParseWords	.vim/macros/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.edit()$/;"	f
Path.equals	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.readInfoFromDisk	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.tabnr()$/;"	f
PathUtilities	.vim/ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
Pick	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^command! -buffer -bar Pick   :call s:choose('pick')$/;"	c
Pl#Attr	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Attr(...) " {{{$/;"	f
Pl#BG	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#BG(cterm, ...) " {{{$/;"	f
Pl#Colors#cterm2gui	.vim/bundle/vim-powerline/autoload/Pl/Colors.vim	/^function! Pl#Colors#cterm2gui(cterm) " {{{$/;"	f
Pl#FG	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#FG(cterm, ...) " {{{$/;"	f
Pl#GetStatusline	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#GetStatusline(statuslines, current) " {{{$/;"	f
Pl#HiCurrent	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#HiCurrent(...) " {{{$/;"	f
Pl#HiInsert	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#HiInsert(...) " {{{$/;"	f
Pl#HiNonCurrent	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#HiNonCurrent(...) " {{{$/;"	f
Pl#Load	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Load(...) " {{{$/;"	f
Pl#LoadCached	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#LoadCached() " {{{$/;"	f
Pl#Match	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Match(expr, re) " {{{$/;"	f
Pl#Segment	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Segment(text, ...) " {{{$/;"	f
Pl#SegmentGroup	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#SegmentGroup(...) " {{{$/;"	f
Pl#Split	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Split(...) " {{{$/;"	f
Pl#Statusline	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Statusline(...) " {{{$/;"	f
Pl#UpdateStatusline	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#UpdateStatusline(current) " {{{$/;"	f
Powerline	.vim/bundle/vim-powerline/plugin/Powerline.vim	/^	augroup Powerline$/;"	a
Preview	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang,lnum,arg)$/;"	f
ProcessedLine	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:ProcessedLine(uncomment, match, checkRx, replace)$/;"	f
ProjectMenu	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:ProjectMenu()$/;"	f
Prompt	.vim/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
R	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:R(cmd,bang,...) abort$/;"	f
RARRAY_LEN	.vim/ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_PTR	.vim/ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
RComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:RComplete(A,L,P) abort$/;"	f
REALTIME_PRIORITY_CLASS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^REALTIME_PRIORITY_CLASS = 0x00000100$/;"	v
REPOS_TYPE	.vim/bundle/vim-textobj-user/Makefile	/^REPOS_TYPE := vim-script$/;"	m
RFLOAT_VALUE	.vim/ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RIGHT_ALT_PRESSED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^RIGHT_ALT_PRESSED = 0x0001$/;"	v
RIGHT_CTRL_PRESSED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^RIGHT_CTRL_PRESSED = 0x0004$/;"	v
RM	.vim/ruby/command-t/Makefile	/^RM = rm -f$/;"	m
RSTRING_LEN	.vim/ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_PTR	.vim/ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RUBY	.vim/ruby/command-t/Makefile	/^RUBY = $(ruby)$/;"	m
RUBYARCHDIR	.vim/ruby/command-t/Makefile	/^RUBYARCHDIR   = $(sitearchdir)$(target_prefix)$/;"	m
RUBYCOMMONDIR	.vim/ruby/command-t/Makefile	/^RUBYCOMMONDIR = $(sitedir)$(target_prefix)$/;"	m
RUBYLIBDIR	.vim/ruby/command-t/Makefile	/^RUBYLIBDIR    = $(sitelibdir)$(target_prefix)$/;"	m
RUBY_EXTCONF_H	.vim/ruby/command-t/Makefile	/^RUBY_EXTCONF_H = $/;"	m
RUBY_INSTALL_NAME	.vim/ruby/command-t/Makefile	/^RUBY_INSTALL_NAME = ruby$/;"	m
RUBY_SO_NAME	.vim/ruby/command-t/Makefile	/^RUBY_SO_NAME = ruby$/;"	m
Rails	.vim/bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|call rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsHelpCommand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsHelpCommand(...)$/;"	f
RailsIncludeexpr	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	.vim/bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Rake	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Rake(bang,arg)$/;"	f
RakeComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:RakeComplete(A,L,P)$/;"	f
Ref	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Ref	.vim/macros/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Refresh	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBalloons	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:RefreshBalloons()$/;"	f
RefreshBuffer	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshSigns	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:RefreshSigns()$/;"	f
RegHandler	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! s:RegHandler(regex, function, args)$/;"	f
Related	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
Remove	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveSigns	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:RemoveSigns(ids)$/;"	f
RepeatLast	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! RepeatLast(name, output, ...) " {{{$/;"	f
ReplaceCmd	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
Resolve	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
Resolve	.vim/macros/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
Reword	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^command! -buffer -bar Reword :call s:choose('reword')$/;"	c
Rlib	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Rlib(file)$/;"	f
RlibComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:RlibComplete(A,L,P)$/;"	f
Rspec	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Rspec(...)$/;"	f
RspecComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:RspecComplete(A,L,P)$/;"	f
Rtask	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Rtask(file)$/;"	f
RtaskComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:RtaskComplete(A,L,P)$/;"	f
Rtest	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Rtest(...)$/;"	f
RtestComplete	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:RtestComplete(A,L,P)$/;"	f
Rtestorspec	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Rtestorspec(order,file)$/;"	f
SCRIPT	.vim/bundle/delimitMate/Makefile	/^SCRIPT=$(wildcard plugin\/*.vim)$/;"	m
SCROLLLOCK_ON	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SCROLLLOCK_ON = 0x0040$/;"	v
SECURITY_ATTRIBUTES	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class SECURITY_ATTRIBUTES(Structure):$/;"	c
SHELL	.vim/ruby/command-t/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHIFT_PRESSED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SHIFT_PRESSED = 0x0010$/;"	v
SID	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function s:SID()$/;"	f
SID_PREFIX	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:SID_PREFIX()$/;"	f
SMALL_RECT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class SMALL_RECT(Structure):$/;"	c
SPrintF	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:SPrintF(string, ...)$/;"	f
SRCS	.vim/ruby/command-t/Makefile	/^SRCS = ext.c match.c matcher.c$/;"	m
STARTF_FORCEOFFFEEDBACK	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEOFFFEEDBACK = 0x00000080$/;"	v
STARTF_FORCEONFEEDBACK	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEONFEEDBACK = 0x00000040$/;"	v
STARTF_PREVENTPINNING	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_PREVENTPINNING = 0x00002000$/;"	v
STARTF_RUNFULLSCREEN	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_RUNFULLSCREEN = 0x00000020$/;"	v
STARTF_TITLEISAPPID	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISAPPID = 0x00001000$/;"	v
STARTF_TITLEISLINKNAME	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISLINKNAME = 0x00000800$/;"	v
STARTF_USECOUNTCHARS	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USECOUNTCHARS = 0x00000008$/;"	v
STARTF_USEFILLATTRIBUTE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USEFILLATTRIBUTE = 0x00000010$/;"	v
STARTF_USEHOTKEY	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USEHOTKEY = 0x00000200$/;"	v
STARTF_USEPOSITION	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USEPOSITION = 0x00000004$/;"	v
STARTF_USESHOWWINDOW	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USESHOWWINDOW = 0x00000001$/;"	v
STARTF_USESIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USESIZE = 0x00000002$/;"	v
STARTF_USESTDHANDLES	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STARTF_USESTDHANDLES = 0x00000100$/;"	v
STARTUPINFO	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class STARTUPINFO(Structure):$/;"	c
STATIC_LIB	.vim/ruby/command-t/Makefile	/^STATIC_LIB = $/;"	m
STD_ERROR_HANDLE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STD_ERROR_HANDLE = c_ulong(-12)$/;"	v
STD_INPUT_HANDLE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STD_INPUT_HANDLE = c_ulong(-10)$/;"	v
STD_OUTPUT_HANDLE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^STD_OUTPUT_HANDLE = c_ulong(-11)$/;"	v
SW_FORCEMINIMIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_FORCEMINIMIZE = 11$/;"	v
SW_HIDE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_HIDE = 0$/;"	v
SW_MAXIMIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_MAXIMIZE = 3$/;"	v
SW_MINIMIZE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_MINIMIZE = 6$/;"	v
SW_RESTORE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_RESTORE = 9$/;"	v
SW_SHOW	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOW = 5$/;"	v
SW_SHOWDEFAULT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWDEFAULT = 10$/;"	v
SW_SHOWMAXIMIZED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMAXIMIZED = 3$/;"	v
SW_SHOWMINIMIZED	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINIMIZED = 2$/;"	v
SW_SHOWMINNOACTIVE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINNOACTIVE = 7$/;"	v
SW_SHOWNA	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNA = 8$/;"	v
SW_SHOWNOACTIVATE	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNOACTIVATE = 4$/;"	v
SW_SHOWNORMAL	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNORMAL = 1$/;"	v
Scanner	.vim/ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Screen	.vim/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
SendConfirm	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! SendConfirm()$/;"	f
Set	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath()$/;"	f
SetErlangOptions	.vim/bundle/vimerl/ftplugin/erlang.vim	/^function s:SetErlangOptions()$/;"	f
SetOptDefault	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:SetOptDefault(opt,val)$/;"	f
Settings	.vim/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
SetupMake	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:SetupMake() abort$/;"	f
ShowLocList	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:ShowLocList()$/;"	f
SignErrors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:SignErrors()$/;"	f
SnippetsIndent	.vim/bundle/neocomplcache-snippets-complete/indent/snippet.vim	/^function! SnippetsIndent()"{{{$/;"	f
Squash	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^command! -buffer -bar Squash :call s:choose('squash')$/;"	c
StageDiff	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StagePatch	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReloadSeek	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StartRx	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! s:StartRx(pos)$/;"	f
StartWranglerServer	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! StartWranglerServer()$/;"	f
Status	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
Stl_GetBranch	.vim/bundle/vim-powerline/powerline/distinguished.vim	/^function! Stl_GetBranch(branch_symbol) " {{{$/;"	f
Stl_GetCommandTLine	.vim/bundle/vim-powerline/powerline/distinguished.vim	/^function! Stl_GetCommandTLine() " {{{$/;"	f
Stl_GetCurrentFunction	.vim/bundle/vim-powerline/powerline/distinguished.vim	/^function! Stl_GetCurrentFunction() " {{{$/;"	f
Stl_GetManPage	.vim/bundle/vim-powerline/powerline/distinguished.vim	/^function! Stl_GetManPage() " {{{$/;"	f
Stl_GetMode	.vim/bundle/vim-powerline/powerline/distinguished.vim	/^function! Stl_GetMode() " {{{$/;"	f
Stl_GetSyntaxErrors	.vim/bundle/vim-powerline/powerline/distinguished.vim	/^function! Stl_GetSyntaxErrors(line_symbol) " {{{$/;"	f
StopWranglerServer	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! StopWranglerServer()$/;"	f
Stub	.vim/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
SyntasticAddToErrors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! SyntasticAddToErrors(errors, options)$/;"	f
SyntasticCheck	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^command! SyntasticCheck call s:UpdateErrors(0) <bar> redraw!$/;"	c
SyntasticErrorBalloonExpr	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! SyntasticErrorBalloonExpr()$/;"	f
SyntasticHighlightErrors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! SyntasticHighlightErrors(errors, termfunc, ...)$/;"	f
SyntasticMake	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options)$/;"	f
SyntasticStatuslineFlag	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag()$/;"	f
SyntasticToggleMode	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call s:ToggleMode()$/;"	c
SyntaxCheckers_applescript_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/applescript.vim	/^function! SyntaxCheckers_applescript_GetLocList()$/;"	f
SyntaxCheckers_c_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/c.vim	/^function! SyntaxCheckers_c_GetLocList()$/;"	f
SyntaxCheckers_coffee_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/coffee.vim	/^function! SyntaxCheckers_coffee_GetLocList()$/;"	f
SyntaxCheckers_cpp_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/cpp.vim	/^function! SyntaxCheckers_cpp_GetLocList()$/;"	f
SyntaxCheckers_css_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/css.vim	/^function! SyntaxCheckers_css_GetLocList()$/;"	f
SyntaxCheckers_cucumber_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/cucumber.vim	/^function! SyntaxCheckers_cucumber_GetLocList()$/;"	f
SyntaxCheckers_cuda_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/cuda.vim	/^function! SyntaxCheckers_cuda_GetLocList()$/;"	f
SyntaxCheckers_docbk_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/docbk.vim	/^function! SyntaxCheckers_docbk_GetLocList()$/;"	f
SyntaxCheckers_erlang_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/erlang.vim	/^function! SyntaxCheckers_erlang_GetLocList()$/;"	f
SyntaxCheckers_eruby_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/eruby.vim	/^function! SyntaxCheckers_eruby_GetLocList()$/;"	f
SyntaxCheckers_fortran_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/fortran.vim	/^function! SyntaxCheckers_fortran_GetLocList()$/;"	f
SyntaxCheckers_gentoo_metadata_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/gentoo_metadata.vim	/^function! SyntaxCheckers_gentoo_metadata_GetLocList()$/;"	f
SyntaxCheckers_go_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/go.vim	/^function! SyntaxCheckers_go_GetLocList()$/;"	f
SyntaxCheckers_haml_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/haml.vim	/^function! SyntaxCheckers_haml_GetLocList()$/;"	f
SyntaxCheckers_haskell_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/haskell.vim	/^function! SyntaxCheckers_haskell_GetLocList()$/;"	f
SyntaxCheckers_haxe_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/haxe.vim	/^function! SyntaxCheckers_haxe_GetLocList()$/;"	f
SyntaxCheckers_html_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/html.vim	/^function! SyntaxCheckers_html_GetLocList()$/;"	f
SyntaxCheckers_javascript_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_GetLocList()$/;"	f
SyntaxCheckers_javascript_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_GetLocList()$/;"	f
SyntaxCheckers_javascript_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_GetLocList()$/;"	f
SyntaxCheckers_javascript_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_GetLocList()$/;"	f
SyntaxCheckers_javascript_HighlightTerm	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_HighlightTerm(error)$/;"	f
SyntaxCheckers_json_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_GetLocList()$/;"	f
SyntaxCheckers_json_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_GetLocList()$/;"	f
SyntaxCheckers_less_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/less.vim	/^function! SyntaxCheckers_less_GetLocList()$/;"	f
SyntaxCheckers_lhaskell_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/haskell.vim	/^function! SyntaxCheckers_lhaskell_GetLocList()$/;"	f
SyntaxCheckers_locaml_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/locaml.vim	/^function! SyntaxCheckers_locaml_GetLocList()$/;"	f
SyntaxCheckers_lua_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/lua.vim	/^function! SyntaxCheckers_lua_GetLocList()$/;"	f
SyntaxCheckers_lua_Term	.vim/bundle/vim-syntastic/syntax_checkers/lua.vim	/^function! SyntaxCheckers_lua_Term(pos)$/;"	f
SyntaxCheckers_matlab_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/matlab.vim	/^function! SyntaxCheckers_matlab_GetLocList()$/;"	f
SyntaxCheckers_ocaml_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/ocaml.vim	/^function! SyntaxCheckers_ocaml_GetLocList()$/;"	f
SyntaxCheckers_perl_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/perl.vim	/^function! SyntaxCheckers_perl_GetLocList()$/;"	f
SyntaxCheckers_php_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/php.vim	/^function! SyntaxCheckers_php_GetLocList()$/;"	f
SyntaxCheckers_php_Term	.vim/bundle/vim-syntastic/syntax_checkers/php.vim	/^function! SyntaxCheckers_php_Term(item)$/;"	f
SyntaxCheckers_puppet_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/puppet.vim	/^function! SyntaxCheckers_puppet_GetLocList()$/;"	f
SyntaxCheckers_python_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/python.vim	/^function! SyntaxCheckers_python_GetLocList()$/;"	f
SyntaxCheckers_python_Term	.vim/bundle/vim-syntastic/syntax_checkers/python.vim	/^function! SyntaxCheckers_python_Term(i)$/;"	f
SyntaxCheckers_rst_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/rst.vim	/^function! SyntaxCheckers_rst_GetLocList()$/;"	f
SyntaxCheckers_ruby_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/ruby.vim	/^function! SyntaxCheckers_ruby_GetLocList()$/;"	f
SyntaxCheckers_sass_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/sass.vim	/^function! SyntaxCheckers_sass_GetLocList()$/;"	f
SyntaxCheckers_scss_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/scss.vim	/^function! SyntaxCheckers_scss_GetLocList()$/;"	f
SyntaxCheckers_sh_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/sh.vim	/^function! SyntaxCheckers_sh_GetLocList()$/;"	f
SyntaxCheckers_tcl_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/tcl.vim	/^function! SyntaxCheckers_tcl_GetLocList()$/;"	f
SyntaxCheckers_tex_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/tex.vim	/^function! SyntaxCheckers_tex_GetLocList()$/;"	f
SyntaxCheckers_vala_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/vala.vim	/^function! SyntaxCheckers_vala_GetLocList()$/;"	f
SyntaxCheckers_vala_Term	.vim/bundle/vim-syntastic/syntax_checkers/vala.vim	/^function! SyntaxCheckers_vala_Term(pos)$/;"	f
SyntaxCheckers_xhtml_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/xhtml.vim	/^function! SyntaxCheckers_xhtml_GetLocList()$/;"	f
SyntaxCheckers_xml_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/xml.vim	/^function! SyntaxCheckers_xml_GetLocList()$/;"	f
SyntaxCheckers_xslt_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/xslt.vim	/^function! SyntaxCheckers_xslt_GetLocList()$/;"	f
SyntaxCheckers_yaml_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/yaml.vim	/^function! SyntaxCheckers_yaml_GetLocList()$/;"	f
SyntaxCheckers_zpt_GetLocList	.vim/bundle/vim-syntastic/syntax_checkers/zpt.vim	/^function! SyntaxCheckers_zpt_GetLocList()$/;"	f
TARGET	.vim/ruby/command-t/Makefile	/^TARGET = ext$/;"	m
TARGETS_ARCHIVED	.vim/bundle/vim-textobj-user/Makefile	/^TARGETS_ARCHIVED = $(all_files_in_repos) mduem\/Makefile$/;"	m
TARGETS_STATIC	.vim/bundle/vim-textobj-user/Makefile	/^TARGETS_STATIC = $(filter %.vim %.txt,$(all_files_in_repos))$/;"	m
TARGET_SO	.vim/ruby/command-t/Makefile	/^TARGET_SO     = $(DLLIB)$/;"	m
TComment	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^command! -bang -range -nargs=* TComment keepjumps call tcomment#Comment(<line1>, <line2>, 'G', "<bang>", <f-args>)$/;"	c
TCommentAs	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^command! -bang -complete=customlist,tcomment#FileTypes -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentBlock keepjumps call tcomment#Comment(<line1>, <line2>, 'B', "<bang>", <f-args>)$/;"	c
TCommentDefineType	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^function! TCommentDefineType(name, commentstring)$/;"	f
TCommentInline	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentInline keepjumps call tcomment#Comment(<line1>, <line2>, 'I', "<bang>", <f-args>)$/;"	c
TCommentMaybeInline	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentMaybeInline keepjumps call tcomment#Comment(<line1>, <line2>, 'i', "<bang>", <f-args>)$/;"	c
TCommentRight	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentRight keepjumps call tcomment#Comment(<line1>, <line2>, 'R', "<bang>", <f-args>)$/;"	c
TCommentTypeExists	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^function! TCommentTypeExists(name)$/;"	f
TERMINATOR	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    TERMINATOR = None$/;"	v	class:ConqueSoleSharedMemory
TESTS	.vim/bundle/delimitMate/Makefile	/^TESTS=$(wildcard autoload\/*Tests.vim)$/;"	m
Tags	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:Tags(args)$/;"	f
TestMappingsDo	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:TestMappingsDo() "{{{$/;"	f
TheCWord	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:TheCWord()$/;"	f
TidyEncOptByFenc	.vim/bundle/vim-syntastic/syntax_checkers/html.vim	/^function! s:TidyEncOptByFenc()$/;"	f
TidyEncOptByFenc	.vim/bundle/vim-syntastic/syntax_checkers/xhtml.vim	/^function! s:TidyEncOptByFenc()$/;"	f
ToggleMode	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:ToggleMode()$/;"	f
TreeDirNode.AbsoluteTreeRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openExplorer	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBoomarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	f
TreeFileNode.copy	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
Type	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! Type(name, input, output, options, ...) " {{{$/;"	f
Unique	.vim/bundle/vim-syntastic/syntax_checkers/c.vim	/^function! s:Unique(list)$/;"	f
Unmap	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UpdateErrors	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked)$/;"	f
VERSION	.vim/bundle/delimitMate/Makefile	/^VERSION=$(shell perl -ne 'if (\/\\*\\sCurrent\\srelease:\/) {s\/^\\s+(\\d+\\.\\S+)\\s.*$$\/\\1\/;print}' $(DOC))$/;"	m
VIM	.vim/bundle/delimitMate/Makefile	/^VIM=\/usr\/bin\/vim$/;"	m
VIM	.vim/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	.vim/ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	.vim/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	.vim/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIMFOLDER	.vim/bundle/delimitMate/Makefile	/^VIMFOLDER=~\/.vim\/$/;"	m
VPATH	.vim/ruby/command-t/Makefile	/^VPATH = $(srcdir):$(topdir):$(hdrdir)$/;"	m
ValidateError	.vim/bundle/vim-syntastic/syntax_checkers/html.vim	/^function! s:ValidateError(text)$/;"	f
Ve	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	.vim/autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
WINDOW_BUFFER_SIZE_EVENT	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^WINDOW_BUFFER_SIZE_EVENT = 0x0004$/;"	v
WINDOW_BUFFER_SIZE_RECORD	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^class WINDOW_BUFFER_SIZE_RECORD(Structure):$/;"	c
WarningMasksError	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:WarningMasksError(error, llist)$/;"	f
Warnings	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:Warnings()$/;"	f
Wholematch	.vim/bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
Wholematch	.vim/macros/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WideMsg	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^function! s:WideMsg(msg)$/;"	f
Window	.vim/ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
Wq	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
[%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[%	.vim/macros/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	.vim/macros/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	.vim/macros/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
]%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]%	.vim/macros/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	.vim/macros/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	.vim/macros/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
__curry_stub	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:__curry_stub(...) dict$/;"	f
__delitem__	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def __delitem__(self, key):$/;"	m	class:ConqueScreen	file:
__get_map_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:__get_map_command(type, mode, dict, lhs, rhs)$/;"	f
__get_unmap_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:__get_unmap_command(type, mode, dict, lhs)$/;"	f
__getitem__	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def __getitem__(self, key):$/;"	m	class:ConqueScreen	file:
__init__	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def __init__(self):$/;"	m	class:ConqueScreen
__init__	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    def __init__(self, mem_size, mem_type, mem_key, fixed_length=False, fill_char=' ', serialize=False, encoding='utf-8'):$/;"	m	class:ConqueSoleSharedMemory
__len__	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def __len__(self):$/;"	m	class:ConqueScreen	file:
__matchNode	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__matchNode(node, cond)$/;"	f
__parse_tree	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__parse_tree(ctx, top)$/;"	f
__setitem__	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def __setitem__(self, key, value):$/;"	m	class:ConqueScreen	file:
__sid	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:__sid()$/;"	f
__template.childNode	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__template.childNode(...) dict$/;"	f
__template.childNodes	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__template.childNodes(...) dict$/;"	f
__template.find	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__template.find(...) dict$/;"	f
__template.findAll	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__template.findAll(...) dict$/;"	f
__template.toString	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__template.toString() dict$/;"	f
__template.value	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:__template.value(...) dict$/;"	f
__urlencode_char	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:__urlencode_char(c)$/;"	f
_build_module	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:_build_module(sid)$/;"	f
_compare	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:_compare(a, b)$/;"	f
_encode_name	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("BaseAddress",       c_void_p),$/;"	v	class:MEMORY_BASIC_INFORMATION
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Char", CHAR_UNION),$/;"	v	class:CHAR_INFO
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("EventType", c_short),$/;"	v	class:INPUT_RECORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("KeyEvent", KEY_EVENT_RECORD),$/;"	v	class:INPUT_UNION
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Left", c_short),$/;"	v	class:SMALL_RECT
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Length", c_ulong),$/;"	v	class:SECURITY_ATTRIBUTES
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("UnicodeChar", c_wchar),$/;"	v	class:CHAR_UNION
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("X", c_short),$/;"	v	class:COORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bKeyDown", c_byte),$/;"	v	class:KEY_EVENT_RECORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bSetFocus", c_byte)]$/;"	v	class:FOCUS_EVENT_RECORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("cb",            c_ulong),$/;"	v	class:STARTUPINFO
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwCommandId", c_uint)]$/;"	v	class:MENU_EVENT_RECORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwMousePosition", COORD),$/;"	v	class:MOUSE_EVENT_RECORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD),$/;"	v	class:CONSOLE_SCREEN_BUFFER_INFO
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD)]$/;"	v	class:WINDOW_BUFFER_SIZE_RECORD
_fields_	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("hProcess",    c_void_p),$/;"	v	class:PROCESS_INFORMATION
_import	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:_import(name, scripts)$/;"	f
_map	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:_map(map_commands, forced_p, lhs, rhs)$/;"	f
_redir	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:_redir(cmd)$/;"	f
_scripts	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:_scripts()$/;"	f
_split_by_wcswitdh	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:_split_by_wcswitdh(body, x)$/;"	f
_split_by_wcswitdh_once	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:_split_by_wcswitdh_once(body, x)$/;"	f
_unify_path	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:_unify_path(path)$/;"	f
_wcwidth	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^  function! s:_wcwidth(ucs)"{{{$/;"	f
a%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
a%	.vim/macros/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
abbrev_len	.vim/ruby/command-t/match.c	/^    long    abbrev_len;             \/\/ length of same$/;"	m	struct:__anon1	file:
abbrev_p	.vim/ruby/command-t/match.c	/^    char    *abbrev_p;              \/\/ pointer to search string (abbreviation)$/;"	m	struct:__anon1	file:
abbrev_segments	.vim/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
abolish_l	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
abort	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def abort(self):$/;"	m	class:Conque
abort	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def abort(self):$/;"	m	class:ConqueSole
absolute_coords	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    absolute_coords = True$/;"	v	class:Conque
accept_selection	.vim/ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller
action_table.expand.func	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! s:action_table.expand.func(candidate)"{{{$/;"	f
action_table.preview.func	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! s:action_table.preview.func(candidates)"{{{$/;"	f
activateAll	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateFileNode(node)$/;"	f
add!	.vim/ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	.vim/ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add_conceal_color	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def add_conceal_color(self, text, attributes, stats, line_nr):$/;"	m	class:ConqueSole
add_methods	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_methods	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_paths_for_directory	.vim/ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
addfilecmds	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
adjust_format_for_istar	.vim/bundle/vim-textobj-rubyblock/test/examples.rb	/^def adjust_format_for_istar$/;"	f
align	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def align(self):$/;"	m	class:ConqueScreen
always_show_dot_files	.vim/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:
analyze_dictionary_variable_line	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name)"{{{$/;"	f
analyze_function_line	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype)"{{{$/;"	f
analyze_variable_line	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict)"{{{$/;"	f
app_background_script_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_background_script_command(cmd) dict abort$/;"	f
app_dbext_settings	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_destroy_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_destroy_command(bang,...) dict$/;"	f
app_environments	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_script_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_script_command(cmd) dict abort$/;"	f
app_file	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name)$/;"	f
app_find_file	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_generate_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_generate_command(bang,...) dict$/;"	f
app_generators	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict$/;"	f
app_has	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_lightweight_ruby_eval	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_path	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_rake_tasks	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_shell_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_shell_command(cmd) dict abort$/;"	f
app_runner_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_runner_command(count,args) dict$/;"	f
app_script_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_script_shell_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_shell_command(cmd) dict abort$/;"	f
app_server_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_source_callback	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_source_callback(file) dict$/;"	f
app_tags_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
append	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def append(self, value):$/;"	m	class:ConqueScreen
apply_color	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def apply_color(self, start, end, line=0):$/;"	m	class:Conque
arch	.vim/ruby/command-t/Makefile	/^arch = universal-darwin11.0$/;"	m
archdir	.vim/ruby/command-t/Makefile	/^archdir = $(rubylibdir)\/$(arch)$/;"	m
archflag	.vim/ruby/command-t/Makefile	/^archflag = $/;"	m
argparse	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^import argparse$/;"	i
args	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^args = parser.parse_args()$/;"	v
async_load	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! s:async_load(argv, cache_dir, filename)"{{{$/;"	f
attribute_cache	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    attribute_cache = {}$/;"	v	class:ConqueSole
attribute_cache	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    attribute_cache = {}$/;"	v	class:ConqueSoleSubprocess
attributes	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    attributes = []$/;"	v	class:ConqueSoleSubprocess
auto_read	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def auto_read(self):$/;"	m	class:Conque
autocamelize	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autoload	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
autowrap	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    autowrap = True$/;"	v	class:Conque
b:browsefilter	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:current_syntax	.vim/bundle/neocomplcache-snippets-complete/syntax/snippet.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	.vim/bundle/vim-git/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	.vim/bundle/vim-git/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	.vim/bundle/vim-git/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	.vim/bundle/vim-git/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	.vim/bundle/vim-git/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	.vim/bundle/vim-haml/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	.vim/bundle/vim-haml/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	.vim/bundle/vim-haml/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	.vim/bundle/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	.vim/bundle/vim-scala/after/syntax/help.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	.vim/bundle/vim-scala/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	.vim/bundle/vimerl/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:did_ftplugin	.vim/bundle/vim-git/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vim-git/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vim-haml/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vim-haml/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vimerl/ftplugin/erlang.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin_erlang	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^let b:did_ftplugin_erlang=1$/;"	v
b:did_indent	.vim/bundle/neocomplcache-snippets-complete/indent/snippet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vim-git/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vim-haml/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vim-haml/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vimerl/indent/erlang.vim	/^let b:did_indent = 1$/;"	v
b:error_list	.vim/bundle/vimerl/compiler/erlang.vim	/^let b:error_list = {}$/;"	v
b:git_dir	.vim/bundle/vim-git/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	.vim/bundle/vim-git/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	.vim/bundle/vim-git/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:is_showing_msg	.vim/bundle/vimerl/compiler/erlang.vim	/^let b:is_showing_msg = 0$/;"	v
b:match_words	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:ruby_no_expensive	.vim/bundle/vim-haml/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:undo_ftplugin	.vim/bundle/neocomplcache-snippets-complete/ftplugin/snippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	.vim/bundle/neocomplcache-snippets-complete/ftplugin/snippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^  let b:undo_ftplugin .= "|setl tw<"$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline<'$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo<"$/;"	v
b:undo_ftplugin	.vim/bundle/vim-haml/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	.vim/bundle/vim-haml/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	.vim/bundle/vim-markdown/ftplugin/markdown.vim	/^let b:undo_ftplugin .= "|setl cms< com< fo<"$/;"	v
b:undo_indent	.vim/bundle/neocomplcache-snippets-complete/indent/snippet.vim	/^    let b:undo_indent = ''$/;"	v
b:undo_indent	.vim/bundle/neocomplcache-snippets-complete/indent/snippet.vim	/^let b:undo_indent .= '$/;"	v
b:undo_indent	.vim/bundle/vim-git/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
backspace	.vim/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller
backspace!	.vim/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	.vim/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
bar	.vim/bundle/vimerl/test/test.erl	/^bar(Atom) when not is_tuple(List) ->$/;"	f	module:foo
bar	.vim/bundle/vimerl/test/test.erl	/^bar(List) -> % this is a list$/;"	f	module:foo
bar	.vim/bundle/vimerl/test/test.erl	/^bar(Yay) ->$/;"	f	module:foo
beep	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
bind	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:bind(callable, this)$/;"	f
bindMappings	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bindir	.vim/ruby/command-t/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
bookmarkNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bookmarkNode(...)$/;"	f
bottom	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    bottom = 24 # relative to top of screen$/;"	v	class:Conque
bound	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def bound(self, val, min, max):$/;"	m	class:Conque
break	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:break(f, xs)$/;"	f
bucket	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    bucket = None$/;"	v	class:ConqueSoleWrapper
bufInWindows	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
buffer	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer(...) abort$/;"	f
buffer	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    buffer = None$/;"	v	class:ConqueScreen
buffer	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    buffer = None$/;"	v	class:ConqueSole
buffer	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer(...) abort$/;"	f
buffer_alter_paths	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_alter_paths() dict abort$/;"	f
buffer_app	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_finder	.vim/ruby/command-t/controller.rb	/^    def buffer_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
buffer_getline	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getline	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_getvar	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_height	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_height = 100$/;"	v	class:ConqueSoleSubprocess
buffer_lines	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_path	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_project	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_project	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_redraw_ct	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    buffer_redraw_ct = 1$/;"	v	class:ConqueSole
buffer_related	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_related() dict abort$/;"	f
buffer_repo	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_setvar	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_width	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_width = 160$/;"	v	class:ConqueSoleSubprocess
build_path_option	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:build_path_option(paths,suffix) abort$/;"	f
bundler	.vim/bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler$/;"	a
bundler#buffer	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! bundler#buffer(...) abort$/;"	f
bundler_make	.vim/bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_make$/;"	a
bundler_path	.vim/bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_path$/;"	a
bundler_syntax	.vim/bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_syntax$/;"	a
bundler_utility	.vim/bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_utility$/;"	a
c	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    c = 1 # current cursor column$/;"	v	class:Conque
cCommandTMatch	.vim/ruby/command-t/ext.c	/^VALUE cCommandTMatch    = 0; \/\/ class CommandT::Match$/;"	v
cCommandTMatcher	.vim/ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
cProfile	.vim/bundle/vim-conque/tests/profile.py	/^import cProfile$/;"	i
cache_clear	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
caching	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:caching()"{{{$/;"	f
caching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching()"{{{$/;"	f
caching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching()"{{{$/;"	f
caching_buffer	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_buffer(name)"{{{$/;"	f
caching_completion_from_dict	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_completion_from_dict(dict_name)"{{{$/;"	f
caching_current_buffer	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_current_buffer(start, end, is_auto)"{{{$/;"	f
caching_current_buffer	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:caching_current_buffer(start, end)"{{{$/;"	f
caching_current_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:caching_current_files()$/;"	f
caching_dictionary	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching_dictionary(filetype)$/;"	f
caching_from_dict	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_from_dict(dict_name, kind)"{{{$/;"	f
caching_from_syn	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching_from_syn(filetype)"{{{$/;"	f
caching_include	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:caching_include(bufname)"{{{$/;"	f
caching_prototype_from_dict	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_prototype_from_dict(dict_name)"{{{$/;"	f
caching_snippets	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:caching_snippets(filetype)"{{{$/;"	f
caching_tags	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:caching_tags(bufname, force)"{{{$/;"	f
calc_frequency	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:calc_frequency()"{{{$/;"	f
call	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:call(callable, args, ...)$/;"	f
call_extract	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:call_extract(start_line, start_col, end_line, end_col, name)$/;"	f
call_rename	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:call_rename(mode, line, col, name, search_path)$/;"	f
call_tuple_fun_args	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:call_tuple_fun_args(start_line, start_col, end_line, end_col, search_path)$/;"	f
cancel	.vim/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller
cancel_selection	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:cancel_selection(previous_mode, orig_pos)$/;"	f
capture	.vim/ruby/command-t/vim.rb	/^    def self.capture cmd$/;"	F	class:CommandT.VIM
centerView	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:centerView()$/;"	f
chCwd	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:chRoot(node)$/;"	f
change_title	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def change_title(self, key, val):$/;"	m	class:Conque
changesurround	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_range	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:char_range(from, to)$/;"	f
char_width	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    char_width = 1$/;"	v	class:ConqueSoleSharedMemory
character_set	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    character_set = 'ascii'$/;"	v	class:Conque
charset_graphics	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def charset_graphics(self):$/;"	m	class:Conque
charset_uk	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def charset_uk(self):$/;"	m	class:Conque
charset_us	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def charset_us(self):$/;"	m	class:Conque
checkForBrowse	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
check_buffer	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_buffer(bufnumber, is_force)"{{{$/;"	f
check_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_cache()"{{{$/;"	f
check_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_cache()"{{{$/;"	f
check_changed_buffer	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_changed_buffer(bufnumber)"{{{$/;"	f
check_commands	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def check_commands(self):$/;"	m	class:ConqueSoleSubprocess
check_for_error	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:check_for_error(result)$/;"	f
check_old_cache	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_source()"{{{$/;"	f
choose	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^function! s:choose(word)$/;"	f
chop	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:chop(str) "{{{$/;"	f
clear	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def clear(self):$/;"	m	class:ConqueScreen
clear	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    def clear(self, start=0):$/;"	m	class:ConqueSoleSharedMemory
clear	.vim/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller
clear	.vim/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow
clear!	.vim/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clearBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
clear_matches	.vim/bundle/vimerl/compiler/erlang.vim	/^function! s:clear_matches()$/;"	f
close	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def close(self):$/;"	m	class:Conque
close	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def close(self):$/;"	m	class:ConqueSole
close	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    def close(self):$/;"	m	class:ConqueSoleSharedMemory
close	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSoleSubprocess
close	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def close(self):$/;"	m	class:ConqueSoleWrapper
close	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSubprocess
close	.vim/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
closeChildren	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTree	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTreeIfOpen	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfQuitOnOpen	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeWindow	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
close_pid	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def close_pid(self, pid):$/;"	m	class:ConqueSoleSubprocess
closematch	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^                cmd = shm_command.read()$/;"	v
cmd	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        cmd = shm_command.read()$/;"	v
cmd_line	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        cmd_line = " ".join(sys.argv[6:])$/;"	v
code_page	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        code_page = int(sys.argv[4])$/;"	v
color_cache	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    color_cache = {}$/;"	v	class:ConqueSole
color_changes	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    color_changes = {}$/;"	v	class:Conque
color_conceals	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    color_conceals = {}$/;"	v	class:ConqueSole
color_history	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    color_history = {}$/;"	v	class:Conque
color_mode	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    color_mode = None$/;"	v	class:ConqueSole
color_pruning	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    color_pruning = True$/;"	v	class:Conque
colors_name	.vim/colors/grb2.vim	/^let colors_name = "slate"$/;"	v
columns	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    columns = 80 # same as $COLUMNS$/;"	v	class:Conque
columns	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    columns = 80$/;"	v	class:ConqueSoleWrapper
command	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:command(definition) abort$/;"	f
command	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:command(definition) abort$/;"	f
comp_alpha	.vim/ruby/command-t/matcher.c	/^int comp_alpha(const void *a, const void *b)$/;"	f
comp_score	.vim/ruby/command-t/matcher.c	/^int comp_score(const void *a, const void *b)$/;"	f
compact	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:compact(ary)$/;"	f
compareBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareNodes	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compare_length	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:compare_length(i1, i2)$/;"	f
compare_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:compare_pos(i1, i2)$/;"	f
compare_words	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:compare_words(i1, i2)$/;"	f
compare_words	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! s:compare_words(i1, i2)"{{{$/;"	f
compatibility_check	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:compatibility_check()$/;"	f
completeBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
completion_filter	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:completion_filter(results,A)$/;"	f
concat	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:concat(list)$/;"	f
conque_profile	.vim/bundle/vim-conque/tests/profile.py	/^def conque_profile():$/;"	f
conque_profile_idle	.vim/bundle/vim-conque/tests/profile.py	/^def conque_profile_idle(terminal, seconds):$/;"	f
conque_term#bell	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#bell() " {{{$/;"	f
conque_term#call_hooks	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#call_hooks(event, t_obj) " {{{$/;"	f
conque_term#close_all	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#close_all() "{{{$/;"	f
conque_term#create_terminal_object	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#create_terminal_object(...) " {{{$/;"	f
conque_term#dependency_check	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#dependency_check() " {{{$/;"	f
conque_term#exec_file	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#exec_file() "{{{$/;"	f
conque_term#fail	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#fail(feature) " {{{$/;"	f
conque_term#find_python_exe	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#find_python_exe() " {{{$/;"	f
conque_term#get_instance	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#get_instance(...) " {{{$/;"	f
conque_term#init	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#init() " {{{$/;"	f
conque_term#init_conceal_color	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#init_conceal_color() " {{{$/;"	f
conque_term#key_press	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#key_press() "{{{$/;"	f
conque_term#load_python	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#load_python() " {{{$/;"	f
conque_term#on_blur	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#on_blur() " {{{$/;"	f
conque_term#on_focus	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#on_focus(...) " {{{$/;"	f
conque_term#open	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#open(...) "{{{$/;"	f
conque_term#read_all	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#read_all(insert_mode) "{{{$/;"	f
conque_term#register_function	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#register_function(event, function_name) " {{{$/;"	f
conque_term#resume_session	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#resume_session() " {{{$/;"	f
conque_term#send_file	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#send_file() "{{{$/;"	f
conque_term#send_selected	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#send_selected(type) "{{{$/;"	f
conque_term#set_buffer_settings	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#set_buffer_settings(command, vim_startup_commands) "{{{$/;"	f
conque_term#set_mappings	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#set_mappings(action) "{{{$/;"	f
conque_term#subprocess	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! conque_term#subprocess(command) " {{{$/;"	f
console_height	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        console_height = int(sys.argv[3])$/;"	v
console_width	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        console_width = int(sys.argv[2])$/;"	v
controller	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
copy_file	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:copy_file(src, dest) "{{{$/;"	f
copy_file_exe	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:copy_file_exe(src, dest)$/;"	f
copy_file_pure	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:copy_file_pure(src, dest) "{{{$/;"	f
create	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    def create(self, access='write'):$/;"	m	class:ConqueSoleSharedMemory
createDefaultBindings	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:createDefaultBindings()$/;"	f
createElement	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:createElement(name)$/;"	f
createTreeWin	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
create_hash	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:create_hash(dir, str)$/;"	f
crend	.vim/bundle/vim-endwise/plugin/endwise.vim	/^function! s:crend(always)$/;"	f
cs	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csi_add_spaces	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_add_spaces(self, csi):$/;"	m	class:Conque
csi_clear_line	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_clear_line(self, csi):$/;"	m	class:Conque
csi_clear_screen	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_clear_screen(self, csi):$/;"	m	class:Conque
csi_cursor	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_cursor(self, csi):$/;"	m	class:Conque
csi_cursor_down	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_cursor_down(self, csi):$/;"	m	class:Conque
csi_cursor_left	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_cursor_left(self, csi):$/;"	m	class:Conque
csi_cursor_right	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_cursor_right(self, csi):$/;"	m	class:Conque
csi_cursor_to_column	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_cursor_to_column(self, csi):$/;"	m	class:Conque
csi_cursor_up	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_cursor_up(self, csi):$/;"	m	class:Conque
csi_delete_chars	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_delete_chars(self, csi):$/;"	m	class:Conque
csi_font	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_font(self, csi):$/;"	m	class:Conque
csi_reset	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_reset(self, csi):$/;"	m	class:Conque
csi_set	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_set(self, csi):$/;"	m	class:Conque
csi_set_coords	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_set_coords(self, csi):$/;"	m	class:Conque
csi_tab_clear	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def csi_tab_clear(self, csi):$/;"	m	class:Conque
ctl_bel	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_bel(self):$/;"	m	class:Conque
ctl_bs	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_bs(self):$/;"	m	class:Conque
ctl_cr	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_cr(self):$/;"	m	class:Conque
ctl_nl	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_nl(self):$/;"	m	class:Conque
ctl_si	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_si(self):$/;"	m	class:Conque
ctl_so	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_so(self):$/;"	m	class:Conque
ctl_soh	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_soh(self):$/;"	m	class:Conque
ctl_stx	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_stx(self):$/;"	m	class:Conque
ctl_tab	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def ctl_tab(self):$/;"	m	class:Conque
ctypes	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^import ctypes$/;"	i
ctypes	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^import ctypes$/;"	i
current_compiler	.vim/bundle/vimerl/compiler/erlang.vim	/^let current_compiler = "erlang"$/;"	v
curry	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:curry(callable, v)$/;"	f
cursor_col	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_col = 0$/;"	v	class:ConqueSoleSubprocess
cursor_end	.vim/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller
cursor_end	.vim/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	.vim/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller
cursor_left	.vim/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_line	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_line = 0$/;"	v	class:ConqueSoleSubprocess
cursor_right	.vim/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller
cursor_right	.vim/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_set	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    cursor_set = False$/;"	v	class:Conque
cursor_start	.vim/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller
cursor_start	.vim/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
cycle	.vim/bundle/vim-git/ftplugin/gitrebase.vim	/^function! s:cycle()$/;"	f
data	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    data = []$/;"	v	class:ConqueSoleSubprocess
datadir	.vim/ruby/command-t/Makefile	/^datadir = $(datarootdir)$/;"	m
datarootdir	.vim/ruby/command-t/Makefile	/^datarootdir = $(prefix)\/share$/;"	m
debug	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
decode	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/json.vim	/^function! s:decode(json)$/;"	f
decodeEntityReference	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^function! s:decodeEntityReference(str)$/;"	f
decodeEntityReference	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:decodeEntityReference(str)$/;"	f
decodeURI	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:decodeURI(str)$/;"	f
default_attribute	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    default_attribute = 7$/;"	v	class:ConqueSoleSubprocess
default_open_command	.vim/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller
define_commands	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:define_commands()$/;"	f
define_commands	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
define_commands	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:define_commands()$/;"	f
delete	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
delete	.vim/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller
delete!	.vim/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
deleteBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:deleteBookmark(bm)$/;"	f
delimitMate	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#AddToBuffer	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#AddToBuffer(c) "{{{$/;"	f
delimitMate#BS	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#BalancedParens	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BalancedParens(char) "{{{$/;"	f
delimitMate#CursorIdx	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#CursorIdx() "{{{$/;"	f
delimitMate#Del	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Del() " {{{$/;"	f
delimitMate#ExpandReturn	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Finish	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Finish(move_back) " {{{$/;"	f
delimitMate#FlushBuffer	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#FlushBuffer() " {{{$/;"	f
delimitMate#GetCharFromCursor	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCharFromCursor(...) "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegion	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegion() "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegionIf	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegionIf(char) "{{{$/;"	f
delimitMate#GetSyntaxRegion	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetSyntaxRegion(line, col) "{{{$/;"	f
delimitMate#IsCRExpansion	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsCRExpansion() " {{{$/;"	f
delimitMate#IsEmptyPair	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#IsForbidden	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsForbidden(char) "{{{$/;"	f
delimitMate#IsSmartQuote	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSmartQuote(char) "{{{$/;"	f
delimitMate#IsSpaceExpansion	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSpaceExpansion() " {{{$/;"	f
delimitMate#JumpAny	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(key) " {{{$/;"	f
delimitMate#JumpMany	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#OptionsList	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#OptionsList() "{{{$/;"	f
delimitMate#ParenDelim	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(char) " {{{$/;"	f
delimitMate#QuoteDelim	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#RmBuffer	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#RmBuffer(num) " {{{$/;"	f
delimitMate#ShouldJump	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump() "{{{$/;"	f
delimitMate#SkipDelim	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#TestMappings	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#TestMappings() "{{{$/;"	f
delimitMate#WithinEmptyPair	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate#WriteAfter	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteAfter(str) "{{{$/;"	f
delimitMate#WriteBefore	.vim/bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteBefore(str) "{{{$/;"	f
delimitMateTests#Main	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^function! delimitMateTests#Main()$/;"	f
delimitMate_version	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.6"$/;"	v
deprecated	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:deprecated(func, ...)$/;"	f
dest_height	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	dest_height = dim['ymax'] + (-dim['ymin'])$/;"	v
dest_width	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	dest_width = dim['xmax'] + (-dim['xmin'])$/;"	v
diff_window_count	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffcomplete	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffoff	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
dim	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	dim = {$/;"	v
dirname	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:dirname(path)$/;"	f
disable_caching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:disable_caching(name)"{{{$/;"	f
displayHelp	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	f
display_neco	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:display_neco(number)"{{{$/;"	f
dispose	.vim/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
djump	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
dldflags	.vim/ruby/command-t/Makefile	/^dldflags = $/;"	m
do_auto_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:do_auto_complete(event)"{{{$/;"	f
do_color	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def do_color(self, start=0, end=0, attributes='', stats=None):$/;"	m	class:ConqueSole
doc_dict.search	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:doc_dict.search(cur_text)"{{{$/;"	f
doc_dict.search	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:doc_dict.search(cur_text)"{{{$/;"	f
doc_dict.search	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:doc_dict.search(cur_text)"{{{$/;"	f
docdir	.vim/ruby/command-t/Makefile	/^docdir = $(datarootdir)\/doc\/$(PACKAGE)$/;"	m
dosurround	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dot_file	.vim/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:
ds	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dumpHelp	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
dvidir	.vim/ruby/command-t/Makefile	/^dvidir = $(docdir)$/;"	m
echo	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echoError	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoWarning	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
edit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
edit_snippets	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:edit_snippets(filetype, isruntime)"{{{$/;"	f
editcmdfor	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
enable_caching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:enable_caching(name)"{{{$/;"	f
enable_colors	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    enable_colors = True$/;"	v	class:Conque
encode	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/json.vim	/^function! s:encode(obj)$/;"	f
encodeEntityReference	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^function! s:encodeEntityReference(str)$/;"	f
encodeEntityReference	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:encodeEntityReference(str)$/;"	f
encodeURI	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:encodeURI(items)$/;"	f
encodeURIComponent	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:encodeURIComponent(items)$/;"	f
encoding	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    encoding = None$/;"	v	class:ConqueSole
encoding	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    encoding = 'utf-8'$/;"	v	class:ConqueSoleSharedMemory
endof	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
ensure_appropriate_window_selection	.vim/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller
ensure_cache_under_limit	.vim/ruby/command-t/scanner/file_scanner.rb	/^    def ensure_cache_under_limit$/;"	f	class:CommandT.FileScanner
ents	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^comments); tComment can't currently deduce inline comment styles from $/;"	c
environment	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
environmentEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:environmentEdit(cmd,...)$/;"	f
environmentList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:environmentList(A,L,P)$/;"	f
erlangFindExternalFunc	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^function s:erlangFindExternalFunc(module, base)$/;"	f
erlangFindLocalFunc	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^function s:erlangFindLocalFunc(base)$/;"	f
erlangFindNextNonBlank	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^function s:erlangFindNextNonBlank(lnum)$/;"	f
erlangcomplete#Complete	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^function! erlangcomplete#Complete(findstart, base)$/;"	f
error	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
esc_next_line	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def esc_next_line(self):$/;"	m	class:Conque
esc_scroll_down	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def esc_scroll_down(self):$/;"	m	class:Conque
esc_scroll_up	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def esc_scroll_up(self):$/;"	m	class:Conque
esc_set_tab	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def esc_set_tab(self):$/;"	m	class:Conque
escape	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:escape(str)$/;"	f
escape_file_searching	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:escape_file_searching(buffer_name)"{{{$/;"	f
escape_for_single_quotes	.vim/ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escape_pattern	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:escape_pattern(str)"{{{$/;"	f
escarg	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
escvar	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:escvar(r)$/;"	f
eval_snippet	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:eval_snippet(snippet_text)"{{{$/;"	f
evaluate	.vim/bundle/delimitMate/test/expand_cr.vim	/^let evaluate = 0$/;"	v
exec	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
exec_highlight	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def exec_highlight(self, buffer_line, start, end, highlight):$/;"	m	class:Conque
exec_prefix	.vim/ruby/command-t/Makefile	/^exec_prefix = $(prefix)$/;"	m
execute_abbr_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:execute_abbr_command(mode, dict, lhs, rhs)$/;"	f
execute_map_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:execute_map_command(mode, dict, lhs, rhs)$/;"	f
execute_unmap_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:execute_unmap_command(mode, dict, lhs)$/;"	f
exists?	.vim/ruby/command-t/controller.rb	/^    def exists? name$/;"	f	class:CommandT.Controller
exists_current_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:exists_current_source()"{{{$/;"	f
expand_newline	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:expand_newline()"{{{$/;"	f
expand_placeholder	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line)"{{{$/;"	f
expand_tabline	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:expand_tabline()"{{{$/;"	f
expect	.vim/bundle/delimitMate/test/expand_cr.vim	/^    let expect = 0$/;"	v
expect	.vim/bundle/delimitMate/test/expand_cr.vim	/^    let expect = 1$/;"	v
expect	.vim/bundle/delimitMate/test/expand_cr.vim	/^let expect = 0$/;"	v
expected	.vim/bundle/delimitMate/test/expand_cr.vim	/^    let expected = []$/;"	v
extout	.vim/ruby/command-t/Makefile	/^extout = $/;"	m
extout_prefix	.vim/ruby/command-t/Makefile	/^extout_prefix = $/;"	m
extractafter	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractdbvar	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
fast_mode	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        fast_mode = int(sys.argv[5])$/;"	v
fast_mode	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    fast_mode = 0$/;"	v	class:ConqueSoleSubprocess
fcntl	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import fcntl$/;"	i
fd	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    fd = None$/;"	v	class:ConqueSubprocess
file_finder	.vim/ruby/command-t/controller.rb	/^    def file_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
file_getline	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
filereadable	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
find	.vim/autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
find	.vim/ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
findAndRevealPath	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	f
findamethod	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findedit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
findfromview	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findview	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
firstUsableWindow	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
first_file	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:first_file(choices)$/;"	f
fixed_length	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    fixed_length = False$/;"	v	class:ConqueSoleSharedMemory
fixindent	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixturesEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flatten	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:flatten(list)$/;"	f
flush	.vim/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller
flush	.vim/ruby/command-t/finder.rb	/^    def flush$/;"	f	class:CommandT.Finder
flush	.vim/ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
fnameescape	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:fnameescape(file) abort$/;"	f
focus	.vim/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	.vim/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
foldl	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl1	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:foldl1(f, xs)$/;"	f
foldr	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr1	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:foldr1(f, xs)$/;"	f
font	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^		font = fontforge.open(font_path)$/;"	v
fontforge	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^import fontforge$/;"	i
foo	.vim/bundle/vimerl/test/test.erl	/^-module(foo).$/;"	m
foo	.vim/bundle/vimerl/test/test.erl	/^foo(#foo{bar = Bar, test = Test}) ->$/;"	f	module:foo
foo	.vim/bundle/vimerl/test/test.erl	/^foo(Nay) ->$/;"	f	module:foo
foo	.vim/bundle/vimerl/test/test.erl	/^foo([H | List]) when not is_list(List) ->$/;"	f	module:foo
format	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:format(...)$/;"	f
fugitive	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#reload_status	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_remove	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_temp	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:function(name) abort$/;"	f
function	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
function	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:function(name) abort$/;"	f
functionaltestEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestEdit(cmd,...)$/;"	f
functionaltestList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestList(A,L,P)$/;"	f
fuzzyglob	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
fuzzyglob	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:fuzzyglob(arg)$/;"	f
g%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	.vim/bundle/vim-matchit/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g%	.vim/macros/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	.vim/macros/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	.vim/macros/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:ConqueTerm_CWInsert	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_CWInsert = 0$/;"	v
g:ConqueTerm_CloseOnEnd	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_CloseOnEnd = 0$/;"	v
g:ConqueTerm_CodePage	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_CodePage = 0$/;"	v
g:ConqueTerm_Color	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_Color = 1$/;"	v
g:ConqueTerm_ColorMode	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_ColorMode = ''$/;"	v
g:ConqueTerm_EscKey	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_EscKey = '<Esc>'$/;"	v
g:ConqueTerm_ExecFileKey	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_ExecFileKey = '<F11>'$/;"	v
g:ConqueTerm_FastMode	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_FastMode = 0$/;"	v
g:ConqueTerm_Idx	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_Idx	.vim/bundle/vim-conque/plugin/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_InsertCharPre	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertCharPre = 0$/;"	v
g:ConqueTerm_InsertOnEnter	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertOnEnter = 0$/;"	v
g:ConqueTerm_Loaded	.vim/bundle/vim-conque/plugin/conque_term.vim	/^let g:ConqueTerm_Loaded = 1$/;"	v
g:ConqueTerm_PromptRegex	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_PromptRegex = '^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_.\/\\~,:-]\\+\\$'$/;"	v
g:ConqueTerm_PyExe	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_PyExe = ''$/;"	v
g:ConqueTerm_PyVersion	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_PyVersion = 2$/;"	v
g:ConqueTerm_ReadUnfocused	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_ReadUnfocused = 0$/;"	v
g:ConqueTerm_SendFileKey	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFileKey = '<F10>'$/;"	v
g:ConqueTerm_SendFunctionKeys	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFunctionKeys = 0$/;"	v
g:ConqueTerm_SendVisKey	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_SendVisKey = '<F9>'$/;"	v
g:ConqueTerm_SessionSupport	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_SessionSupport = 0$/;"	v
g:ConqueTerm_StartMessages	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_StartMessages = 1$/;"	v
g:ConqueTerm_Syntax	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_Syntax = 'conque_term'$/;"	v
g:ConqueTerm_TERM	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_TERM =  'vt100'$/;"	v
g:ConqueTerm_Terminals	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let g:ConqueTerm_Terminals = {}$/;"	v
g:ConqueTerm_TerminalsString	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let g:ConqueTerm_TerminalsString = ''$/;"	v
g:ConqueTerm_ToggleKey	.vim/bundle/vim-conque/plugin/conque_term.vim	/^    let g:ConqueTerm_ToggleKey = '<F8>'$/;"	v
g:ConqueTerm_Version	.vim/bundle/vim-conque/plugin/conque_term.vim	/^let g:ConqueTerm_Version = 230$/;"	v
g:NERDTreeBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeDirNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreePath	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:Powerline_loaded	.vim/bundle/vim-powerline/plugin/Powerline.vim	/^	let g:Powerline_loaded = 1$/;"	v
g:ackprg	.vim/bundle/vim-ack/plugin/ack.vim	/^	let g:ackprg="ack -H --nocolor --nogroup --column"$/;"	v
g:autoloaded_rails	.vim/bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '4.4'$/;"	v
g:colors_name	.vim/colors/candycode.vim	/^let g:colors_name="candycode"$/;"	v
g:colors_name	.vim/colors/grb.vim	/^let g:colors_name = "grb"$/;"	v
g:colors_name	.vim/colors/grb256.vim	/^let g:colors_name = "grb256"$/;"	v
g:colors_name	.vim/colors/grb3.vim	/^let g:colors_name = "grb"$/;"	v
g:colors_name	.vim/colors/grb4.vim	/^let g:colors_name = "grb4"$/;"	v
g:colors_name	.vim/colors/grblight.vim	/^let g:colors_name = "grb"$/;"	v
g:command_t_loaded	.vim/plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:delimitMate_excluded_ft	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^	let g:delimitMate_excluded_ft = "vim"$/;"	v
g:delimitMate_expand_cr	.vim/bundle/delimitMate/test/expand_cr.vim	/^let g:delimitMate_expand_cr = 1$/;"	v
g:delimitMate_matchpairs	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^let g:delimitMate_matchpairs = '(:),{:},[:],<:>,¿:?,¡:!'$/;"	v
g:delimitMate_quotes	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^let g:delimitMate_quotes = '" '' ` ” « |'$/;"	v
g:erlangCheckFile	.vim/bundle/vimerl/compiler/erlang.vim	/^    let g:erlangCheckFile = "~\/.vim\/compiler\/erlang_check_file.erl"$/;"	v
g:erlangCompletionDisplayDoc	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^	let g:erlangCompletionDisplayDoc = 1$/;"	v
g:erlangCompletionGrep	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^	let g:erlangCompletionGrep = 'grep'$/;"	v
g:erlangHighlightErrors	.vim/bundle/vimerl/compiler/erlang.vim	/^    let g:erlangHighlightErrors = 0$/;"	v
g:erlangManPath	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^	let g:erlangManPath = '\/usr\/lib\/erlang\/man'$/;"	v
g:erlangManSuffix	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^	let g:erlangManSuffix = ''$/;"	v
g:erlangWranglerPath	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^    let g:erlangWranglerPath = '\/usr\/share\/wrangler\/'$/;"	v
g:fugitive_git_executable	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSpecMatcher . '\\?\\s*' . s:defArgMatcher . '\\?\\s*' . s:returnTypeMatcher . '\\?\\s*[={]'$/;"	v
g:haml_self_closing_tags	.vim/bundle/vim-haml/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:loaded_bundler	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let g:loaded_bundler = 1$/;"	v
g:loaded_delimitMate	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_endwise	.vim/bundle/vim-endwise/plugin/endwise.vim	/^let g:loaded_endwise = 1$/;"	v
g:loaded_fugitive	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_neocomplcache	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:loaded_neocomplcache = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	.vim/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pathogen	.vim/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_rails	.vim/bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_rake	.vim/bundle/vim-rake/plugin/rake.vim	/^let g:loaded_rake = 1$/;"	v
g:loaded_surround	.vim/bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_c_autoload	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_plugin	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_textobj_rubyblock	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^let g:loaded_textobj_rubyblock = 1$/;"	v
g:neocomplcache_auto_completion_start_length	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_auto_completion_start_length =$/;"	v
g:neocomplcache_caching_limit_file_size	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_caching_limit_file_size =$/;"	v
g:neocomplcache_compare_function	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_compare_function =$/;"	v
g:neocomplcache_ctags_program	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_ctags_program =$/;"	v
g:neocomplcache_cursor_hold_i_time	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_cursor_hold_i_time =$/;"	v
g:neocomplcache_disable_auto_complete	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_auto_complete =$/;"	v
g:neocomplcache_disable_caching_file_path_pattern	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_caching_file_path_pattern =$/;"	v
g:neocomplcache_enable_auto_delimiter	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter =$/;"	v
g:neocomplcache_enable_auto_select	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select =$/;"	v
g:neocomplcache_enable_caching_message	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_caching_message =$/;"	v
g:neocomplcache_enable_camel_case_completion	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion =$/;"	v
g:neocomplcache_enable_cursor_hold_i	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_cursor_hold_i =$/;"	v
g:neocomplcache_enable_debug	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_debug =$/;"	v
g:neocomplcache_enable_fuzzy_completion	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_fuzzy_completion =$/;"	v
g:neocomplcache_enable_ignore_case	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_ignore_case =$/;"	v
g:neocomplcache_enable_insert_char_pre	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_insert_char_pre =$/;"	v
g:neocomplcache_enable_prefetch	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_prefetch =$/;"	v
g:neocomplcache_enable_smart_case	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case =$/;"	v
g:neocomplcache_enable_underbar_completion	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion =$/;"	v
g:neocomplcache_enable_wildcard	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_wildcard =$/;"	v
g:neocomplcache_force_overwrite_completefunc	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc =$/;"	v
g:neocomplcache_include_exprs	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_exprs = {}$/;"	v
g:neocomplcache_include_paths	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_patterns	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_patterns = {}$/;"	v
g:neocomplcache_include_suffixes	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^  let g:neocomplcache_include_suffixes = {}$/;"	v
g:neocomplcache_lock_buffer_name_pattern	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_buffer_name_pattern =$/;"	v
g:neocomplcache_manual_completion_start_length	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_manual_completion_start_length =$/;"	v
g:neocomplcache_max_keyword_width	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_keyword_width =$/;"	v
g:neocomplcache_max_list	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_list =$/;"	v
g:neocomplcache_max_menu_width	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_menu_width =$/;"	v
g:neocomplcache_min_keyword_length	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_min_keyword_length =$/;"	v
g:neocomplcache_min_syntax_length	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^  let g:neocomplcache_min_syntax_length = 4$/;"	v
g:neocomplcache_release_cache_time	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_release_cache_time =$/;"	v
g:neocomplcache_source_completion_length	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_completion_length	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_disable	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_disable =$/;"	v
g:neocomplcache_source_disable	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_disable =$/;"	v
g:neocomplcache_source_rank	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_rank = g:neocomplcache_plugin_rank$/;"	v
g:neocomplcache_source_rank	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_rank =$/;"	v
g:neocomplcache_temporary_dir	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_temporary_dir =$/;"	v
g:syntastic_auto_loc_list	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_auto_loc_list = 2$/;"	v
g:syntastic_check_on_open	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_open = 0$/;"	v
g:syntastic_echo_current_error	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_echo_current_error = 1$/;"	v
g:syntastic_enable_balloons	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_balloons	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_enable_balloons = 1$/;"	v
g:syntastic_enable_highlighting	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_enable_highlighting = 1$/;"	v
g:syntastic_enable_signs	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_enable_signs = 0$/;"	v
g:syntastic_enable_signs	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_enable_signs = 1$/;"	v
g:syntastic_fortran_flags	.vim/bundle/vim-syntastic/syntax_checkers/fortran.vim	/^    let g:syntastic_fortran_flags = ''$/;"	v
g:syntastic_javascript_gjslint_conf	.vim/bundle/vim-syntastic/syntax_checkers/javascript/gjslint.vim	/^    let g:syntastic_javascript_gjslint_conf = ""$/;"	v
g:syntastic_javascript_jshint_conf	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_conf = ""$/;"	v
g:syntastic_javascript_jsl_conf	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jsl.vim	/^    let g:syntastic_javascript_jsl_conf = ""$/;"	v
g:syntastic_javascript_jslint_conf	.vim/bundle/vim-syntastic/syntax_checkers/javascript/jslint.vim	/^    let g:syntastic_javascript_jslint_conf = "--white --undef --nomen --regexp --plusplus --bitwise --newcap --sloppy --vars"$/;"	v
g:syntastic_less_options	.vim/bundle/vim-syntastic/syntax_checkers/less.vim	/^    let g:syntastic_less_options = "--no-color"$/;"	v
g:syntastic_mode_map	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_mode_map = {}$/;"	v
g:syntastic_mode_map	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_mode_map['active_filetypes'] = []$/;"	v
g:syntastic_mode_map	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_mode_map['mode'] = 'active'$/;"	v
g:syntastic_mode_map	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_mode_map['passive_filetypes'] = []$/;"	v
g:syntastic_nvcc_binary	.vim/bundle/vim-syntastic/syntax_checkers/cuda.vim	/^	let g:syntastic_nvcc_binary = '\/usr\/local\/cuda\/bin\/nvcc'$/;"	v
g:syntastic_perl_efm_program	.vim/bundle/vim-syntastic/syntax_checkers/perl.vim	/^    let g:syntastic_perl_efm_program = 'perl '.$VIMRUNTIME.'\/tools\/efm_perl.pl -c'$/;"	v
g:syntastic_phpcs_conf	.vim/bundle/vim-syntastic/syntax_checkers/php.vim	/^    let g:syntastic_phpcs_conf = "--standard=Zend"$/;"	v
g:syntastic_phpcs_disable	.vim/bundle/vim-syntastic/syntax_checkers/php.vim	/^    let g:syntastic_phpcs_disable = 0$/;"	v
g:syntastic_python_checker	.vim/bundle/vim-syntastic/syntax_checkers/python.vim	/^      let g:syntastic_python_checker = 'flake8'$/;"	v
g:syntastic_python_checker	.vim/bundle/vim-syntastic/syntax_checkers/python.vim	/^      let g:syntastic_python_checker = 'pyflakes'$/;"	v
g:syntastic_quiet_warnings	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_quiet_warnings = 0$/;"	v
g:syntastic_stl_format	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let g:syntastic_stl_format = '[Syntax: line:%F (%t)]'$/;"	v
g:tcommentBlankLines	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentBlankLines = 1$/;"	v
g:tcommentBlockC	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentBlockC = "\/*%s *\/\\n * "$/;"	v
g:tcommentBlockC2	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentBlockC2 = "\/**%s *\/\\n * "$/;"	v
g:tcommentBlockXML	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentBlockXML = "<!--%s-->\\n  "$/;"	v
g:tcommentFileTypesDirty	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^let g:tcommentFileTypesDirty = 1$/;"	v
g:tcommentGuessFileType	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentGuessFileType = 0$/;"	v
g:tcommentGuessFileType_dsl	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'$/;"	v
g:tcommentGuessFileType_html	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentGuessFileType_html = 1$/;"	v
g:tcommentGuessFileType_php	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentGuessFileType_php = 'html'$/;"	v
g:tcommentGuessFileType_tskeleton	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1$/;"	v
g:tcommentGuessFileType_vim	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentGuessFileType_vim = 1$/;"	v
g:tcommentIgnoreTypes_php	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'$/;"	v
g:tcommentInlineC	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentInlineC = "\/* %s *\/"$/;"	v
g:tcommentInlineXML	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentInlineXML = "<!-- %s -->"$/;"	v
g:tcommentMapLeader1	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentMapLeader1 = '<c-_>'$/;"	v
g:tcommentMapLeader2	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_'$/;"	v
g:tcommentMapLeaderOp1	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc'$/;"	v
g:tcommentMapLeaderOp2	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC'$/;"	v
g:tcommentOpModeExtra	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentOpModeExtra = ''$/;"	v
g:tcommentSyntaxMap	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
get	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:get(url, ...)$/;"	f
getPath	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getTreeWinNum	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
get_abbr_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:get_abbr_command(...)$/;"	f
get_all_modes	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:get_all_modes()$/;"	f
get_all_modes_list	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:get_all_modes_list()$/;"	f
get_augrouplist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_augrouplist()"{{{$/;"	f
get_bool	.vim/ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller
get_bool	.vim/ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_buffer_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_buffer_include_files(bufnumber)"{{{$/;"	f
get_buffer_info	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def get_buffer_info(self):$/;"	m	class:ConqueSoleSubprocess
get_buffer_line	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def get_buffer_line(self, line):$/;"	m	class:Conque
get_buffer_line	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueScreen
get_buffer_line	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueSole
get_cached_script_candidates	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cached_script_candidates()"{{{$/;"	f
get_cmdlist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cmdlist()"{{{$/;"	f
get_completefunc_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^function! s:get_completefunc_list(list)"{{{$/;"	f
get_context_filetype	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:get_context_filetype(filetype)"{{{$/;"	f
get_cur_text	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:get_cur_text()"{{{$/;"	f
get_cursor_highlight	.vim/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow
get_cursor_keyword_snippet	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:get_cursor_keyword_snippet(snippets, cur_text)"{{{$/;"	f
get_cursor_snippet	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:get_cursor_snippet(snippets, cur_text)"{{{$/;"	f
get_endlist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_endlist()"{{{$/;"	f
get_envlist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_envlist()"{{{$/;"	f
get_functionlist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_functionlist()"{{{$/;"	f
get_glob_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_glob_files(cur_keyword_str, path)"{{{$/;"	f
get_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_include_files(cur_keyword_str)"{{{$/;"	f
get_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr)"{{{$/;"	f
get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! s:get_keyword_pos(cur_text)"{{{$/;"	f
get_last_status	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:get_last_status()"{{{$/;"	f
get_list_or_string	.vim/ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller
get_local_variables	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_local_variables()"{{{$/;"	f
get_map_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:get_map_command(...)$/;"	f
get_mappinglist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_mappinglist()"{{{$/;"	f
get_member_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_list(cur_text, var_name)"{{{$/;"	f
get_member_pattern	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_pattern(filetype)"{{{$/;"	f
get_msg	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:get_msg(result, tuple_start)$/;"	f
get_new_output	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def get_new_output(self, lines, update_top, stats):$/;"	m	class:ConqueSole
get_number	.vim/ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller
get_number	.vim/ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_omni_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_list(list)"{{{$/;"	f
get_real_idx	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def get_real_idx(self, line):$/;"	m	class:ConqueScreen
get_screen_text	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def get_screen_text(self):$/;"	m	class:ConqueSoleSubprocess
get_script_candidates	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_script_candidates(bufnumber)"{{{$/;"	f
get_sources_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:get_sources_list()"{{{$/;"	f
get_sources_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_sources_list()"{{{$/;"	f
get_stats	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def get_stats(self):$/;"	m	class:ConqueSoleWrapper
get_string	.vim/ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller
get_top	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def get_top(self):$/;"	m	class:ConqueScreen
get_unabbr_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:get_unabbr_command(...)$/;"	f
get_unmap_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:get_unmap_command(...)$/;"	f
get_variable_type	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variable_type(expression)"{{{$/;"	f
get_variablelist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variablelist(dict, prefix)"{{{$/;"	f
getchar	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getfilename	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
getopt	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:getopt(opt,...)$/;"	f
getpidfor	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:getpidfor(bind,port)$/;"	f
gg	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal gg$/;"	m
ggVG"_d	.vim/bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal ggVG"_d$/;"	m
gitdiffcached	.vim/bundle/vim-git/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
github_url	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
glob	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:glob(...)$/;"	f
globpath	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:globpath(...)$/;"	f
gpos_to_spos	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:gpos_to_spos(gpos)$/;"	f
gsub	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
handle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    handle = None$/;"	v	class:ConqueSoleSubprocess
handle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    handle = None$/;"	v	class:ConqueSoleWrapper
handleLeftClick	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_key	.vim/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller
has	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:has(list, Value)$/;"	f
has_index	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:has_index(list, index)$/;"	f
has_opt	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:has_opt(options, name)$/;"	f
has_syntax	.vim/ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
has_vimproc	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:has_vimproc()"{{{$/;"	f
hash_screen_alignment_test	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def hash_screen_alignment_test(self):$/;"	m	class:Conque
hdrdir	.vim/ruby/command-t/Makefile	/^hdrdir = $(topdir)$/;"	m
hello	.vim/bundle/vim-textobj-rubyblock/test/examples.rb	/^def hello$/;"	f
helperEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:helperEdit(cmd,...)$/;"	f
helperList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:helperList(A,L,P)$/;"	f
helpermethods	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
hide	.vim/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide_cursor	.vim/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow
highlight_groups	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    highlight_groups = {}$/;"	v	class:Conque
htmldir	.vim/ruby/command-t/Makefile	/^htmldir = $(docdir)$/;"	m
iconv	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
idle	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def idle(self):$/;"	m	class:Conque
idle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def idle(self):$/;"	m	class:ConqueSole
idle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def idle(self):$/;"	m	class:ConqueSoleWrapper
idle_sleep_time	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        idle_sleep_time = 0.10$/;"	v
import	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:import(name, ...)$/;"	f
includedir	.vim/ruby/command-t/Makefile	/^includedir = $(prefix)\/include$/;"	m
indentLevelFor	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
infodir	.vim/ruby/command-t/Makefile	/^infodir = $(DESTDIR)\/usr\/share\/info$/;"	m
init	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
initNerdTree	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTreeInPlace	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeMirror	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initOpenURL	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initVariable	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_shared_memory	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleSubprocess
init_shared_memory	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleWrapper
init_tabstops	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def init_tabstops(self):$/;"	m	class:Conque
initialize	.vim/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	.vim/ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	.vim/ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	.vim/ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	.vim/ruby/command-t/finder/jump_finder.rb	/^    def initialize$/;"	f	class:CommandT.JumpFinder
initialize	.vim/ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	.vim/ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	.vim/ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	.vim/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize_include	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_include(filename, filetype)"{{{$/;"	f
initialize_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:initialize_source(srcname)"{{{$/;"	f
initialize_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:initialize_source(srcname)"{{{$/;"	f
initialize_tags	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:initialize_tags(filename)"{{{$/;"	f
initializerEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:initializerEdit(cmd,...)$/;"	f
initializerList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:initializerList(A,L,P)$/;"	f
input2	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input, '(', s:l, 'g')$/;"	v
input2	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let input2 = substitute(input2, ')', s:r, 'g')$/;"	v
input_buffer	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    input_buffer = []$/;"	v	class:Conque
input_helper	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_q	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let input_q = substitute(input,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
input_safe	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:input_safe(...)$/;"	f
inputreplacement	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def insert(self, line, value):$/;"	m	class:ConqueScreen
insert	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert_enter	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def insert_enter(self):$/;"	m	class:Conque
instaweb_url	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
integrationtestEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestEdit(cmd,...)$/;"	f
integrationtestList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestList(A,L,P)$/;"	f
invertrange	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
isTreeOpen	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isWindowUsable	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
is_absolute	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^  function! s:is_absolute(path)$/;"	f
is_alive	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleSubprocess
is_alive	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    is_alive = True$/;"	v	class:ConqueSoleSubprocess
is_alive	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleWrapper
is_alive	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSubprocess
is_case_tolerant	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:is_case_tolerant()$/;"	f
is_cygwin	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_cygwin()"{{{$/;"	f
is_dict	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_float	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_float(Value)$/;"	f
is_funcref	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_idle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = False$/;"	v
is_idle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = True$/;"	v
is_idle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^                is_idle = True$/;"	v
is_idle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        is_idle = False$/;"	v
is_integer	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_list	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_list(Value)$/;"	f
is_mac	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_mac()"{{{$/;"	f
is_mode_char	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:is_mode_char(char)$/;"	f
is_number	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_number(Value)$/;"	f
is_numeric	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_string	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_string(Value)$/;"	f
is_windows	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:is_windows()"{{{$/;"	f
itemsnumber	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^let itemsnumber = len(split(g:delimitMate_matchpairs, ','))$/;"	v
itemsnumber	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^let itemsnumber = len(split(g:delimitMate_quotes, ' '))$/;"	v
javascriptEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
join	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:join(...)$/;"	f
jumpToChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
jump_finder	.vim/ruby/command-t/controller.rb	/^    def jump_finder$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
jumps	.vim/ruby/command-t/scanner/jump_scanner.rb	/^    def jumps$/;"	f	class:CommandT.JumpScanner
keyword_filter	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:keyword_filter(list, cur_keyword_str)"{{{$/;"	f
l	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    l = 1 # current cursor line$/;"	v	class:Conque
lastformat	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:lastformat(start)$/;"	f
lastmethod	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
layoutEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
ldflags	.vim/ruby/command-t/Makefile	/^ldflags  = -L. -arch i386 -arch x86_64 $/;"	m
leave	.vim/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller
leave	.vim/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
libEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:libEdit(cmd,...)$/;"	f
libList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:libList(A,L,P)$/;"	f
libdir	.vim/ruby/command-t/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libexecdir	.vim/ruby/command-t/Makefile	/^libexecdir = $(exec_prefix)\/libexec$/;"	m
libpath	.vim/ruby/command-t/Makefile	/^libpath = . $(libdir)$/;"	m
line	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let line = getline('.')$/;"	v
line	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let line = getline('.')$/;"	v
line_contains_filename?	.vim/ruby/command-t/scanner/jump_scanner.rb	/^    def line_contains_filename? line$/;"	f	class:CommandT.JumpScanner
line_offset	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    line_offset = 0$/;"	v	class:ConqueSoleSubprocess
linepeak	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
lines	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	.vim/bundle/delimitMate/test/expand_cr.vim	/^  let lines = getline(1, line('$'))$/;"	v
lines	.vim/bundle/delimitMate/test/expand_cr.vim	/^let lines = readfile(expand('<sfile>:t:r').'.txt')$/;"	v
lines	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    lines = 24 # same as $LINES$/;"	v	class:Conque
lines	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    lines = 24$/;"	v	class:ConqueSoleWrapper
lines	.vim/ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
list_matches	.vim/ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
load	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! s:load(...) dict$/;"	f
load_checker	.vim/bundle/vim-syntastic/syntax_checkers/javascript.vim	/^function! s:load_checker(checker)$/;"	f
load_checker	.vim/bundle/vim-syntastic/syntax_checkers/json.vim	/^function! s:load_checker(checker)$/;"	f
load_from_file	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding)"{{{$/;"	f
load_from_tags	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding)"{{{$/;"	f
load_snippets	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:load_snippets(snippet, snippets_file)"{{{$/;"	f
loaded_applescript_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/applescript.vim	/^let loaded_applescript_syntax_checker = 1$/;"	v
loaded_c_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/c.vim	/^let loaded_c_syntax_checker = 1$/;"	v
loaded_coffee_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/coffee.vim	/^let loaded_coffee_syntax_checker = 1$/;"	v
loaded_cpp_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/cpp.vim	/^let loaded_cpp_syntax_checker = 1$/;"	v
loaded_css_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/css.vim	/^let loaded_css_syntax_checker = 1$/;"	v
loaded_cucumber_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/cucumber.vim	/^let loaded_cucumber_syntax_checker = 1$/;"	v
loaded_cuda_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/cuda.vim	/^let loaded_cuda_syntax_checker = 1$/;"	v
loaded_docbk_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/docbk.vim	/^let loaded_docbk_syntax_checker = 1$/;"	v
loaded_erlang_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/erlang.vim	/^let loaded_erlang_syntax_checker = 1$/;"	v
loaded_eruby_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/eruby.vim	/^let loaded_eruby_syntax_checker = 1$/;"	v
loaded_fortran_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/fortran.vim	/^let loaded_fortran_syntax_checker = 1$/;"	v
loaded_gentoo_metadata_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/gentoo_metadata.vim	/^let loaded_gentoo_metadata_syntax_checker = 1$/;"	v
loaded_go_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/go.vim	/^let loaded_go_syntax_checker = 1$/;"	v
loaded_haml_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/haml.vim	/^let loaded_haml_syntax_checker = 1$/;"	v
loaded_haskell_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/haskell.vim	/^let loaded_haskell_syntax_checker = 1$/;"	v
loaded_haxe_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/haxe.vim	/^let loaded_haxe_syntax_checker = 1$/;"	v
loaded_html_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/html.vim	/^let loaded_html_syntax_checker = 1$/;"	v
loaded_javascript_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/javascript.vim	/^let loaded_javascript_syntax_checker = 1$/;"	v
loaded_json_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/json.vim	/^let loaded_json_syntax_checker = 1$/;"	v
loaded_less_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/less.vim	/^let loaded_less_syntax_checker = 1$/;"	v
loaded_locaml_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/locaml.vim	/^let loaded_locaml_syntax_checker = 1$/;"	v
loaded_lua_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/lua.vim	/^let loaded_lua_syntax_checker = 1$/;"	v
loaded_matchit	.vim/bundle/vim-matchit/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_matchit	.vim/macros/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_matlab_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/matlab.vim	/^let loaded_matlab_syntax_checker = 1$/;"	v
loaded_nerd_tree	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_ocaml_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/ocaml.vim	/^let loaded_ocaml_syntax_checker = 1$/;"	v
loaded_perl_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/perl.vim	/^let loaded_perl_syntax_checker = 1$/;"	v
loaded_php_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/php.vim	/^let loaded_php_syntax_checker = 1$/;"	v
loaded_puppet_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/puppet.vim	/^let loaded_puppet_syntax_checker = 1$/;"	v
loaded_python_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/python.vim	/^let loaded_python_syntax_checker = 1$/;"	v
loaded_rst_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/rst.vim	/^let loaded_rst_syntax_checker = 1$/;"	v
loaded_ruby_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/ruby.vim	/^let loaded_ruby_syntax_checker = 1$/;"	v
loaded_sass_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/sass.vim	/^let loaded_sass_syntax_checker = 1$/;"	v
loaded_scss_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/scss.vim	/^let loaded_scss_syntax_checker = 1$/;"	v
loaded_sh_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/sh.vim	/^let loaded_sh_syntax_checker = 1$/;"	v
loaded_tcl_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/tcl.vim	/^let loaded_tcl_syntax_checker = 1$/;"	v
loaded_tcomment	.vim/bundle/vim-tcomment/plugin/tComment.vim	/^let loaded_tcomment = 109$/;"	v
loaded_tcomment_autoload	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^let loaded_tcomment_autoload = 1$/;"	v
loaded_tex_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/tex.vim	/^let loaded_tex_syntax_checker = 1$/;"	v
loaded_vala_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/vala.vim	/^let loaded_vala_syntax_checker = 1$/;"	v
loaded_xhtml_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/xhtml.vim	/^let loaded_xhtml_syntax_checker = 1$/;"	v
loaded_xml_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/xml.vim	/^let loaded_xml_syntax_checker = 1$/;"	v
loaded_xslt_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/xslt.vim	/^let loaded_xslt_syntax_checker = 1$/;"	v
loaded_yaml_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/yaml.vim	/^let loaded_yaml_syntax_checker = 1$/;"	v
loaded_zpt_syntax_checker	.vim/bundle/vim-syntastic/syntax_checkers/zpt.vim	/^let loaded_zpt_syntax_checker = 1$/;"	v
localeEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localedir	.vim/ruby/command-t/Makefile	/^localedir = $(datarootdir)\/locale$/;"	m
localfunc	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:localfunc(funcname, sid)$/;"	f
localstatedir	.vim/ruby/command-t/Makefile	/^localstatedir = $(prefix)\/var$/;"	m
location	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^		location = glyph.unicode$/;"	v
lock	.vim/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow
logging	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import logging # DEBUG$/;"	i
loops	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        loops = 0$/;"	v
mCommandT	.vim/ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
mailerEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:mailerEdit(cmd,...)$/;"	f
mailerList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:mailerList(A,L,P)$/;"	f
main	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:main(argv)"{{{$/;"	f
main	.vim/bundle/vim-syntastic/syntax_checkers/erlang_check_file.erl	/^main([FileName]) ->$/;"	f
main	.vim/bundle/vimerl/autoload/erlang_completion.erl	/^main([ModuleName]) ->$/;"	f
main	.vim/bundle/vimerl/autoload/erlang_completion.erl	/^main(_) ->$/;"	f
main	.vim/bundle/vimerl/compiler/erlang_check_file.erl	/^main([File_Name]) ->$/;"	f
main_syntax	.vim/bundle/vim-haml/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
make_completion_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:make_completion_list(list, menu_pattern, kind)"{{{$/;"	f
makewithruby	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:makewithruby(arg,bang,...)$/;"	f
mandir	.vim/ruby/command-t/Makefile	/^mandir = $(DESTDIR)\/usr\/share\/man$/;"	m
map	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:map(forced_p, lhs, rhs)$/;"	f
map	.vim/ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
mapargs_pair_select	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:mapargs_pair_select(lhs, pattern1, pattern2, flags, previous_mode)$/;"	f
mapargs_single_move	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:mapargs_single_move(lhs, pattern, flags, previous_mode)$/;"	f
mapargs_single_select	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:mapargs_single_select(lhs, pattern, flags, previous_mode)$/;"	f
match_limit	.vim/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_pair	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt)"{{{$/;"	f
match_text_for_idx	.vim/ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_type	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
match_wildcard	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:match_wildcard(cur_text, pattern, cur_keyword_pos)"{{{$/;"	f
matchcursor	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matches=	.vim/ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matchinfo_t	.vim/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
math	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^import math$/;"	i
max_height	.vim/ruby/command-t/controller.rb	/^    def max_height$/;"	f	class:CommandT.Controller
max_loops	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        max_loops = 0$/;"	v
max_score_per_char	.vim/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:
mem_key	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        mem_key = sys.argv[1]$/;"	v
mem_key	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_key = None$/;"	v	class:ConqueSoleSharedMemory
mem_redraw_ct	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    mem_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
mem_size	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_size = None$/;"	v	class:ConqueSoleSharedMemory
mem_type	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_type = None$/;"	v	class:ConqueSoleSharedMemory
menuBufEnter	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufEnter()$/;"	f
menuBufLeave	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufLeave()$/;"	f
menucmd	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:menucmd(priority)$/;"	f
menuprompt	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:menuprompt(vimcmd,prompt)$/;"	f
metalEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:metalEdit(cmd,...)$/;"	f
metalList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:metalList(A,L,P)$/;"	f
mextargs	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
migrationEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
missing	.vim/ruby/command-t/extconf.rb	/^def missing item$/;"	f
mkdir_nothrow	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:mkdir_nothrow(...) "{{{$/;"	f
mkeep	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mmap	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^import mmap$/;"	i
model	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
modelEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:modelEdit(cmd,...)$/;"	f
modelList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:modelList(A,L,P)$/;"	f
move_cursor_to_selected_line	.vim/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
move_file	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:move_file(src, dest) "{{{$/;"	f
move_file_exe	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:move_file_exe(src, dest)$/;"	f
move_file_pure	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:move_file_pure(src, dest) "{{{$/;"	f
mysearchpair	.vim/bundle/vim-endwise/plugin/endwise.vim	/^function! s:mysearchpair(beginpat,endpat,synpat)$/;"	f
navcommand	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:navcommand(name) abort$/;"	f
neocomplcache	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^  augroup neocomplcache$/;"	a
neocomplcache#add_dictionaries	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#add_dictionaries(dictionaries)"{{{$/;"	f
neocomplcache#async_cache#main	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! neocomplcache#async_cache#main(argv)"{{{$/;"	f
neocomplcache#auto_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#auto_complete(findstart, base)"{{{$/;"	f
neocomplcache#available_complfuncs	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_complfuncs()"{{{$/;"	f
neocomplcache#available_ftplugins	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_ftplugins()"{{{$/;"	f
neocomplcache#available_loaded_ftplugins	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_loaded_ftplugins()"{{{$/;"	f
neocomplcache#available_plugins	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_plugins()"{{{$/;"	f
neocomplcache#available_sources	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_sources()"{{{$/;"	f
neocomplcache#cache#async_load_from_file	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_file(cache_dir, filename, pattern, mark)"{{{$/;"	f
neocomplcache#cache#async_load_from_tags	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_tags(cache_dir, filename, filetype, mark, is_create_tags)"{{{$/;"	f
neocomplcache#cache#check_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache(cache_dir, key, async_cache_dictionary,$/;"	f
neocomplcache#cache#check_old_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_old_cache(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#encode_name	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#encode_name(cache_dir, filename)$/;"	f
neocomplcache#cache#filereadable	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#filereadable(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#getfilename	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#getfilename(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#index_load_from_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#index_load_from_cache(cache_dir, filename, completion_length)"{{{$/;"	f
neocomplcache#cache#list2index	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#list2index(list, dictionary, completion_length)"{{{$/;"	f
neocomplcache#cache#load_from_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#readfile	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#readfile(cache_dir, filename)"{{{$/;"	f
neocomplcache#cache#save_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache(cache_dir, filename, keyword_list)"{{{$/;"	f
neocomplcache#cache#test_async	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#test_async()"{{{$/;"	f
neocomplcache#cache#writefile	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#writefile(cache_dir, filename, list)"{{{$/;"	f
neocomplcache#cancel_popup	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#cancel_popup()"{{{$/;"	f
neocomplcache#check_completion_length_match	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_completion_length_match(cur_keyword_str, completion_length)"{{{$/;"	f
neocomplcache#check_match_filter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_match_filter(cur_keyword_str)"{{{$/;"	f
neocomplcache#close_popup	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#close_popup()"{{{$/;"	f
neocomplcache#compare_rank	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#compare_rank(i1, i2)$/;"	f
neocomplcache#complete_common_string	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_common_string()"{{{$/;"	f
neocomplcache#dictionary_filter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dictionary_filter(dictionary, cur_keyword_str, completion_length)"{{{$/;"	f
neocomplcache#disable	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#disable()"{{{$/;"	f
neocomplcache#dup_filter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dup_filter(list)"{{{$/;"	f
neocomplcache#enable	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#enable() "{{{$/;"	f
neocomplcache#escape_match	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#escape_match(str)"{{{$/;"	f
neocomplcache#exists_echodoc	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#exists_echodoc()"{{{$/;"	f
neocomplcache#filetype_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#filetype_complete(arglead, cmdline, cursorpos)"{{{$/;"	f
neocomplcache#fuzzy_filter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#fuzzy_filter(list, cur_keyword_str)"{{{$/;"	f
neocomplcache#get_auto_completion_length	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_auto_completion_length(plugin_name)"{{{$/;"	f
neocomplcache#get_complete_results	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_complete_results(cur_text, ...)"{{{$/;"	f
neocomplcache#get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_complete_words(complete_results, is_sort,$/;"	f
neocomplcache#get_completion_length	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_completion_length(plugin_name)"{{{$/;"	f
neocomplcache#get_context_filetype	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype(...)"{{{$/;"	f
neocomplcache#get_cur_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_keyword_pos(complete_results)"{{{$/;"	f
neocomplcache#get_cur_text	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_text(...)"{{{$/;"	f
neocomplcache#get_keyword_pattern	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern(...)"{{{$/;"	f
neocomplcache#get_keyword_pattern_end	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern_end(...)"{{{$/;"	f
neocomplcache#get_next_keyword	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword()"{{{$/;"	f
neocomplcache#get_next_keyword_pattern	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword_pattern(...)"{{{$/;"	f
neocomplcache#get_prev_word	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_prev_word(cur_keyword_str)"{{{$/;"	f
neocomplcache#get_source_filetypes	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_filetypes(filetype)"{{{$/;"	f
neocomplcache#get_source_rank	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_rank(plugin_name)"{{{$/;"	f
neocomplcache#get_sources_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_sources_list(dictionary, filetype)"{{{$/;"	f
neocomplcache#get_syn_name	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_syn_name(is_trans)"{{{$/;"	f
neocomplcache#has_vimproc	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#has_vimproc(...)"{{{$/;"	f
neocomplcache#head_filter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#head_filter(list, cur_keyword_str)"{{{$/;"	f
neocomplcache#head_match	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#head_match(checkstr, headstr)"{{{$/;"	f
neocomplcache#is_auto_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_complete()"{{{$/;"	f
neocomplcache#is_auto_select	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_select()"{{{$/;"	f
neocomplcache#is_enabled	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled()"{{{$/;"	f
neocomplcache#is_eskk_enabled	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_enabled()"{{{$/;"	f
neocomplcache#is_locked	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_locked(...)"{{{$/;"	f
neocomplcache#is_plugin_locked	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_plugin_locked(plugin_name)"{{{$/;"	f
neocomplcache#is_source_enabled	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_source_enabled(plugin_name)"{{{$/;"	f
neocomplcache#is_sources_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_sources_complete()"{{{$/;"	f
neocomplcache#is_text_mode	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_text_mode()"{{{$/;"	f
neocomplcache#is_win	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_win()"{{{$/;"	f
neocomplcache#is_windows	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_windows()"{{{$/;"	f
neocomplcache#keyword_escape	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_escape(cur_keyword_str)"{{{$/;"	f
neocomplcache#keyword_filter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_filter(list, cur_keyword_str)"{{{$/;"	f
neocomplcache#lock	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#lock(...)"{{{$/;"	f
neocomplcache#lock_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#lock_source(source_name)"{{{$/;"	f
neocomplcache#manual_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_complete(findstart, base)"{{{$/;"	f
neocomplcache#manual_filename_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_filename_complete()"{{{$/;"	f
neocomplcache#manual_keyword_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_keyword_complete()"{{{$/;"	f
neocomplcache#manual_omni_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#manual_omni_complete()"{{{$/;"	f
neocomplcache#match_word	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#match_word(cur_text, ...)"{{{$/;"	f
neocomplcache#popup_post	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#popup_post()"{{{$/;"	f
neocomplcache#print_caching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_caching(string)"{{{$/;"	f
neocomplcache#print_debug	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_debug(expr)"{{{$/;"	f
neocomplcache#print_error	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_error(string)"{{{$/;"	f
neocomplcache#print_warning	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_warning(string)"{{{$/;"	f
neocomplcache#rand	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#rand(max)"{{{$/;"	f
neocomplcache#set_completion_length	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_completion_length(plugin_name, length)"{{{$/;"	f
neocomplcache#set_dictionary_helper	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_dictionary_helper(variable, keys, value)"{{{$/;"	f
neocomplcache#smart_close_popup	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#smart_close_popup()"{{{$/;"	f
neocomplcache#sources#abbrev_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! neocomplcache#sources#abbrev_complete#define()"{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_line	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_line()"{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_word	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_word(keyword)"{{{$/;"	f
neocomplcache#sources#buffer_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#define()"{{{$/;"	f
neocomplcache#sources#buffer_complete#get_frequencies	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#get_frequencies()"{{{$/;"	f
neocomplcache#sources#completefunc_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^function! neocomplcache#sources#completefunc_complete#define()"{{{$/;"	f
neocomplcache#sources#dictionary_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#define()"{{{$/;"	f
neocomplcache#sources#filename_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#define()"{{{$/;"	f
neocomplcache#sources#filename_complete#get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#get_complete_words(cur_keyword_str, path)"{{{$/;"	f
neocomplcache#sources#include_complete#analyze_ruby_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_ruby_include_files(lines, path)"{{{$/;"	f
neocomplcache#sources#include_complete#analyze_vim_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_vim_include_files(lines, path)"{{{$/;"	f
neocomplcache#sources#include_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#define()"{{{$/;"	f
neocomplcache#sources#include_complete#get_current_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_current_include_files()"{{{$/;"	f
neocomplcache#sources#include_complete#get_include_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_files(bufnumber)"{{{$/;"	f
neocomplcache#sources#include_complete#get_include_tags	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_tags(bufnumber)"{{{$/;"	f
neocomplcache#sources#keyword_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! neocomplcache#sources#keyword_complete#define()"{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_line	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_line()"{{{$/;"	f
neocomplcache#sources#member_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#define()"{{{$/;"	f
neocomplcache#sources#omni_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! neocomplcache#sources#omni_complete#define()"{{{$/;"	f
neocomplcache#sources#snippets_complete#define	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define()"{{{$/;"	f
neocomplcache#sources#snippets_complete#expand	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#expand(cur_text, col, trigger_name)"{{{$/;"	f
neocomplcache#sources#snippets_complete#expandable	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#expandable()"{{{$/;"	f
neocomplcache#sources#snippets_complete#get_snippets	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#get_snippets()"{{{$/;"	f
neocomplcache#sources#syntax_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#define()"{{{$/;"	f
neocomplcache#sources#tags_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#define()"{{{$/;"	f
neocomplcache#sources#vim_complete#define	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#define()"{{{$/;"	f
neocomplcache#sources#vim_complete#get_command	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_command(cur_text)"{{{$/;"	f
neocomplcache#sources#vim_complete#get_cur_text	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_cur_text()"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#augroup	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#augroup(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#autocmd_args	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#autocmd_args(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#buffer	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#buffer(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#colorscheme_args	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#colorscheme_args(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command_args	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command_args(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#custom	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#custom(command_name, cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#customlist	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#customlist(command_name, cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#dir	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#dir(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#environment	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#environment(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#event	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#event(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#execute	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#execute(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expand	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expand(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expression	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expression(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#feature	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#feature(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#file	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#file(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#filetype	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#filetype(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#function	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#function(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_command_completion	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_command_completion(command_name, cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_completion_name	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_completion_name(command_name)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#help	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#help(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#highlight	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#highlight(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#let	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#let(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#mapping	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#mapping(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#menu	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#menu(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#on_filetype	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#on_filetype()"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#option	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#option(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#recaching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#recaching(bufname)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#shellcmd	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#shellcmd(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag_listfiles	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag_listfiles(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var_dictionary	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var_dictionary(cur_text, cur_keyword_str)"{{{$/;"	f
neocomplcache#sources_manual_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#sources_manual_complete(findstart, base)"{{{$/;"	f
neocomplcache#start_manual_complete	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete(...)"{{{$/;"	f
neocomplcache#start_manual_complete_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete_list(cur_keyword_pos, cur_keyword_str, complete_words)"{{{$/;"	f
neocomplcache#system	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#system(...)"{{{$/;"	f
neocomplcache#toggle_lock	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#toggle_lock()"{{{$/;"	f
neocomplcache#trunk_string	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#trunk_string(string, max)"{{{$/;"	f
neocomplcache#undo_completion	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#undo_completion()"{{{$/;"	f
neocomplcache#unlock	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unlock(...)"{{{$/;"	f
neocomplcache#unlock_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unlock_source(source_name)"{{{$/;"	f
neocomplcache#unpack_dictionary	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unpack_dictionary(dict)"{{{$/;"	f
neocomplcache#util#expand	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#expand(path)"{{{$/;"	f
neocomplcache#util#get_last_status	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#get_last_status(...)"{{{$/;"	f
neocomplcache#util#glob	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#glob(pattern, ...)"{{{$/;"	f
neocomplcache#util#has_vimproc	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc(...)"{{{$/;"	f
neocomplcache#util#is_mac	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_mac(...)"{{{$/;"	f
neocomplcache#util#is_windows	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_windows(...)"{{{$/;"	f
neocomplcache#util#mb_strlen	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#mb_strlen(...)"{{{$/;"	f
neocomplcache#util#set_default_dictionary_helper	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default_dictionary_helper(variable, keys, value)"{{{$/;"	f
neocomplcache#util#set_dictionary_helper	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_dictionary_helper(variable, keys, value)"{{{$/;"	f
neocomplcache#util#strchars	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strchars(...)"{{{$/;"	f
neocomplcache#util#strwidthpart	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart(...)"{{{$/;"	f
neocomplcache#util#strwidthpart_reverse	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart_reverse(...)"{{{$/;"	f
neocomplcache#util#substitute_path_separator	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#substitute_path_separator(...)"{{{$/;"	f
neocomplcache#util#system	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#system(...)"{{{$/;"	f
neocomplcache#util#truncate	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate(...)"{{{$/;"	f
neocomplcache#util#truncate_smart	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate_smart(...)"{{{$/;"	f
neocomplcache#util#uniq	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(list)"{{{$/;"	f
neocomplcache#util#wcswidth	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#wcswidth(...)"{{{$/;"	f
neocomplcache#within_comment	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#within_comment()"{{{$/;"	f
neocomplcache_source.gather_candidates	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.gather_candidates(args, context) "{{{$/;"	f
neocomplcache_source.hooks.on_init	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.hooks.on_init(args, context) "{{{$/;"	f
never_show_dot_files	.vim/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:
new	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:new(...) "{{{$/;"	f
nextBufferName	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
noremap	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:noremap(forced_p, lhs, rhs)$/;"	f
objmap	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:objmap(forced_p, lhs, rhs)$/;"	f
objnoremap	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:objnoremap(forced_p, lhs, rhs)$/;"	f
observerEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:observerEdit(cmd,...)$/;"	f
observerList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:observerList(A,L,P)$/;"	f
offset	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    offset = 0$/;"	v	class:ConqueSole
oldincludedir	.vim/ruby/command-t/Makefile	/^oldincludedir = $(DESTDIR)\/usr\/include$/;"	m
on_insert_enter	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:on_insert_enter()"{{{$/;"	f
on_insert_leave	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:on_insert_leave()"{{{$/;"	f
onlybitmaps	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	onlybitmaps = font.onlybitmaps$/;"	v
open	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def open(self):$/;"	m	class:Conque
open	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def open(self):$/;"	m	class:ConqueSole
open	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def open(self, cmd, mem_key, options={}):$/;"	m	class:ConqueSoleSubprocess
open	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def open(self, cmd, lines, columns, python_exe='python.exe', communicator_py='conque_sole_communicator.py', options={}):$/;"	m	class:ConqueSoleWrapper
open	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def open(self, command, env={}):$/;"	m	class:ConqueSubprocess
open	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^function! s:open(filename) "{{{$/;"	f
openBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openExplorer	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openVSplit(target)$/;"	f
open_selection	.vim/ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
opfunc	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_init	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
options	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        options = {'LINES': console_height, 'COLUMNS': console_width, 'CODE_PAGE': code_page, 'FAST_MODE': fast_mode}$/;"	v
options_chars2dict	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:options_chars2dict(chars)$/;"	f
options_chars2raw	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:options_chars2raw(chars)$/;"	f
options_dict2chars	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:options_dict2chars(dict)$/;"	f
options_dict2raw	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^function! s:options_dict2raw(dict)$/;"	f
opts	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:opts()$/;"	f
ordered_set.clear	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.clear() "{{{$/;"	f
ordered_set.empty	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.empty() "{{{$/;"	f
ordered_set.has	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.has(elem) "{{{$/;"	f
ordered_set.has_id	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.has_id(id) "{{{$/;"	f
ordered_set.push	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function s:ordered_set.push(elem) "{{{$/;"	f
ordered_set.remove	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.remove(elem) "{{{$/;"	f
ordered_set.size	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.size() "{{{$/;"	f
ordered_set.to_list	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.to_list() "{{{$/;"	f
ordered_set.unshift	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:ordered_set.unshift(elem) "{{{$/;"	f
os	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import os # DEBUG$/;"	i
os	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^import os$/;"	i
os	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import os$/;"	i
os	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^import os$/;"	i
output2	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output, '(', s:l, 'g')$/;"	v
output2	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let output2 = substitute(output2, ')', s:r, 'g')$/;"	v
output_blocks	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    output_blocks = 1$/;"	v	class:ConqueSoleSubprocess
output_keyword	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:output_keyword(name)"{{{$/;"	f
output_name	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	output_name = os.path.split(font_path)[1].split('.')[0]$/;"	v
output_q	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let output_q = substitute(output,"'" , escape(escape(quote, '"'), '\\'), 'g')$/;"	v
p	.vim/bundle/vim-conque/tests/profile.py	/^p = pstats.Stats('conque_profile_output')$/;"	v
padding_for_selected_match	.vim/ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow
parse	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^function! s:parse(content)$/;"	f
parse	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:parse(xml)$/;"	f
parseFile	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^function! s:parseFile(fname)$/;"	f
parseFile	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:parseFile(fname)$/;"	f
parseURL	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^function! s:parseURL(url)$/;"	f
parseURL	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^function! s:parseURL(url)$/;"	f
parse_csi	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def parse_csi(self, s):$/;"	m	class:Conque
parser	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^parser = argparse.ArgumentParser(description='Font patcher for Powerline. Creates dividers and symbols in FontForge-compatible font files. Requires FontForge with Python bindings. Stores glyphs in the U+2B80-U+2BFF range ("Miscellaneous symbols and arrows"). Stores the patched font as a new, renamed font file by default.')$/;"	v
passed	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let passed = line == eval(output2)$/;"	v
passed	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let passed = line == eval(output_q)$/;"	v
passed	.vim/bundle/delimitMate/test/expand_cr.vim	/^  let passed = lines == expected$/;"	v
path2directory	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:path2directory(path)"{{{$/;"	f
path2project_directory	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:path2project_directory(path)"{{{$/;"	f
path=	.vim/ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path_excluded?	.vim/ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
pathjoin	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathogen#cycle_filetype	.vim/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#fnameescape	.vim/autoload/pathogen.vim	/^function! pathogen#fnameescape(string) " {{{1$/;"	f
pathogen#glob	.vim/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	.vim/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	.vim/autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	.vim/autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	.vim/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	.vim/autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	.vim/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	.vim/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	.vim/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	.vim/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	.vim/autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	.vim/autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	.vim/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
paths	.vim/ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	.vim/ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
paths	.vim/ruby/command-t/scanner/jump_scanner.rb	/^    def paths$/;"	f	class:CommandT.JumpScanner
pathsplit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pdfdir	.vim/ruby/command-t/Makefile	/^pdfdir = $(docdir)$/;"	m
pickle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    import cPickle as pickle$/;"	i
pickle	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    import pickle$/;"	i
pid	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    pid = None$/;"	v	class:ConqueSoleSubprocess
pid	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    pid = None$/;"	v	class:ConqueSoleWrapper
pid	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    pid = 0$/;"	v	class:ConqueSubprocess
plain_text	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def plain_text(self, input):$/;"	m	class:Conque
plain_text	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def plain_text(self, line_nr, text, attributes, stats):$/;"	m	class:ConqueSole
plugin.define_default_key_mappings	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.define_default_key_mappings(banged_p)  "{{{3$/;"	f
plugin.define_interface_key_mappings	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.define_interface_key_mappings()  "{{{3$/;"	f
plugin.interface_mapping_name	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.interface_mapping_name(obj_name, spec_name)  "{{{3$/;"	f
plugin.move	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.move(obj_name, flags, previous_mode)$/;"	f
plugin.new	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function s:plugin.new(plugin_name, obj_specs)$/;"	f
plugin.normalize	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function s:plugin.normalize()$/;"	f
plugin.select	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.select(obj_name, flags, previous_mode)$/;"	f
plugin.select_pair	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.select_pair(obj_name, flags, previous_mode)$/;"	f
pluginEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:pluginEdit(cmd,...)$/;"	f
pluginList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:pluginList(A,L,P)$/;"	f
pop_command	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:pop_command()$/;"	f
pop_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
pop_command	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:pop_command()$/;"	f
pos_headp	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:pos_headp(pos)$/;"	f
pos_lastp	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:pos_lastp(pos)$/;"	f
pos_le	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:pos_le(pos1, pos2)  " less than or equal$/;"	f
post	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^function! s:post(url, ...)$/;"	f
postSourceActions	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:postSourceActions()$/;"	f
prefix	.vim/ruby/command-t/Makefile	/^prefix = $(DESTDIR)\/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr$/;"	m
preload	.vim/ruby/command-t/Makefile	/^preload = $/;"	m
prepare_movement	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:prepare_movement(previous_mode)$/;"	f
prepare_selection	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:prepare_selection(previous_mode)$/;"	f
prephelp	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:prephelp()$/;"	f
previewNodeCurrent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_error	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:print_error(message)"{{{$/;"	f
print_error	.vim/ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_match	.vim/ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow
print_matches	.vim/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow
print_no_such_file_or_directory	.vim/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_snippets_complete_error	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^function! s:print_snippets_complete_error()$/;"	f
print_source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:print_source(name)"{{{$/;"	f
proc	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    proc = None$/;"	v	class:Conque
proc	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        proc = ConqueSoleSubprocess()$/;"	v
proc	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    proc = None$/;"	v	class:ConqueSoleWrapper
process	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
project	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:project(...) abort$/;"	f
project	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project(...) abort$/;"	f
project_alter_buffer_paths	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_alter_buffer_paths() dict abort$/;"	f
project_dirglob	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_dirglob(base) dict abort$/;"	f
project_first_file	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_first_file(...) dict abort$/;"	f
project_gems	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_gems() dict abort$/;"	f
project_has_directory	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_has_directory(file) dict$/;"	f
project_has_file	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_has_file(file) dict$/;"	f
project_path	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_path(...) dict abort$/;"	f
project_path	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_path(...) dict abort$/;"	f
project_relglob	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_relglob(path,glob,...) dict$/;"	f
project_tags_file	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_tags_file() dict abort$/;"	f
project_tasks	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:project_tasks()$/;"	f
promptToDelBuffer	.vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
proper_visual_mode	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:proper_visual_mode(lhs)$/;"	f
prune_colors	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def prune_colors(self):$/;"	m	class:Conque
psMat	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^import psMat$/;"	i
psdir	.vim/ruby/command-t/Makefile	/^psdir = $(docdir)$/;"	m
pstats	.vim/bundle/vim-conque/tests/profile.py	/^import pstats$/;"	i
pty	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import pty$/;"	i
push_chdir	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:push_chdir()$/;"	f
push_chdir	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
push_chdir	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:push_chdir(...)$/;"	f
putCursorInTreeWin	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorOnBookmarkTable	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
pwd	.vim/ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
quotes	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^  let quotes = split(g:delimitMate_quotes, '\\s')$/;"	v
rails#app	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#log_syntax	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...)$/;"	f
rails#pluralize	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	.vim/bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	.vim/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	.vim/bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	.vim/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMenu	.vim/bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginMenu$/;"	a
rake	.vim/bundle/vim-rake/plugin/rake.vim	/^augroup rake$/;"	a
rake#buffer	.vim/bundle/vim-rake/plugin/rake.vim	/^function! rake#buffer(...) abort$/;"	f
rake_path	.vim/bundle/vim-rake/plugin/rake.vim	/^augroup rake_path$/;"	a
rake_tags	.vim/bundle/vim-rake/plugin/rake.vim	/^augroup rake_tags$/;"	a
rake_utility	.vim/bundle/vim-rake/plugin/rake.vim	/^augroup rake_utility$/;"	a
range_containsp	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_containsp(range_head, range_tail, target_pos)$/;"	f
range_no_text_without_edgesp	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_no_text_without_edgesp(range_head, range_tail)$/;"	f
range_select	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_select(range_head, range_tail)$/;"	f
range_validp	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_validp(range_head, range_tail)$/;"	f
re	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^import re$/;"	i
re	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import re$/;"	i
re	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^import re$/;"	i
read	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:Conque
read	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:ConqueSole
read	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    def read(self, chars=1, start=0):$/;"	m	class:ConqueSoleSharedMemory
read	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def read(self):$/;"	m	class:ConqueSoleSubprocess
read	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def read(self, start_line, num_lines, timeout=0):$/;"	m	class:ConqueSoleWrapper
read	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def read(self, timeout=1):$/;"	m	class:ConqueSubprocess
read_count	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    read_count = 0$/;"	v	class:Conque
readable_app	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(lnum) dict abort$/;"	f
readable_define_pattern	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_last_format	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_format(start) dict abort$/;"	f
readable_last_method	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_preview_urls	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_related	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_type_name	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name() dict abort$/;"	f
readfile	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
readfile	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
recaching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:recaching(filetype)"{{{$/;"	f
recaching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:recaching(filetype)"{{{$/;"	f
recall	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
recursive_match	.vim/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,  \/\/ sharable meta-data$/;"	f
redraw	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
redraw	.vim/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
refreshCurrent	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
register_for_key_presses	.vim/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
reindent	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relative_path_under_working_directory	.vim/ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relglob	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
reload	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 0$/;"	v
reload	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let reload = 1$/;"	v
reload	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^let reload = 1$/;"	v
reload	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let reload = 0$/;"	v
reload	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let reload = 1$/;"	v
reload	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^let reload = 1$/;"	v
remove_last_separator	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:remove_last_separator(path)$/;"	f
remove_next_keyword	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:remove_next_keyword(plugin_name, list)"{{{$/;"	f
renderBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderView	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderView()$/;"	f
renderViewSavingPosition	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
replace	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:replace(str, from, to)$/;"	f
replace_once	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:replace_once(str, from, to)$/;"	f
repo	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head_ref	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
res	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        res = proc.open(cmd_line, mem_key, options)$/;"	v
reset_console	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def reset_console(self, buf_info, add_block=True):$/;"	m	class:ConqueSoleSubprocess
reset_size	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def reset_size(self, line):$/;"	m	class:ConqueScreen
resetomnicomplete	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
restore	.vim/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restoreScreenState	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
restore_window_dimensions	.vim/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
resume	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def resume(self):$/;"	m	class:Conque
resume	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def resume(self):$/;"	m	class:ConqueSole
resume	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def resume(self):$/;"	m	class:ConqueSoleWrapper
revealBookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
rhs_escape	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:rhs_escape(pattern)$/;"	f
rquote	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
ruby	.vim/ruby/command-t/Makefile	/^ruby = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/bin\/ruby$/;"	m
ruby_inspect	.vim/ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
ruby_version	.vim/ruby/command-t/Makefile	/^ruby_version = 1.8$/;"	m
rubylibdir	.vim/ruby/command-t/Makefile	/^rubylibdir = $(libdir)\/ruby\/$(ruby_version)$/;"	m
s:Bookmark	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:Cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^let s:Cache = vital#of('neocomplcache').import('System.Cache')$/;"	v
s:EMPTY	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:EMPTY = ['', 0]$/;"	v
s:ErlangBlankLine	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^let s:ErlangBlankLine       = '^\\s*\\(%.*\\)\\?$'$/;"	v
s:ErlangBlankLine	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	let s:ErlangBlankLine   = '^\\s*\\(%.*\\)\\?$'$/;"	v
s:ErlangFunBegin	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	let s:ErlangFunBegin    = '^\\a\\w*(.*$'$/;"	v
s:ErlangFunEnd	.vim/bundle/vimerl/ftplugin/erlang.vim	/^	let s:ErlangFunEnd      = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
s:HARD_DIVIDER	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:HARD_DIVIDER = 0$/;"	v
s:HI_FALLBACK	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:HI_FALLBACK = { 'cterm': 0, 'gui': 0x000000 }$/;"	v
s:KeyMap	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	v
s:LEFT_SIDE	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:LEFT_SIDE = 0$/;"	v
s:MenuController	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTreeBufName	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeSortStarIndex	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERD_tree_version	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.2.0'$/;"	v
s:Opener	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Opener = {}$/;"	v
s:Path	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Path = {}$/;"	v
s:RIGHT_SIDE	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:RIGHT_SIDE = 2$/;"	v
s:SOFT_DIVIDER	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:SOFT_DIVIDER = 1$/;"	v
s:TYPE_DICT	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^let s:TYPE_DICT    = type({})$/;"	v
s:TYPE_FUNCREF	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^let s:TYPE_FUNCREF = type(function('tr'))$/;"	v
s:TYPE_STRING	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^let s:TYPE_STRING  = type("")$/;"	v
s:TreeDirNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeFileNode	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:V	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^let s:V = vital#of('neocomplcache')$/;"	v
s:V	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^let s:V = vital#{expand('<sfile>:h:h:t:r')}#new()$/;"	v
s:__template	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^let s:__template = { 'name': '', 'attr': {}, 'child': [] }$/;"	v
s:abstract_prototype	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	.vim/bundle/vim-rake/plugin/rake.vim	/^let s:abstract_prototype = {}$/;"	v
s:action_table	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^let s:action_table.preview = {$/;"	v
s:app_prototype	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	.vim/bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:attributes	.vim/bundle/vim-haml/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:base_dir	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^let s:base_dir = expand('<sfile>:r')$/;"	v
s:begin_snippet	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:begin_snippet = 0$/;"	v
s:block_openers	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^let s:block_openers = '\\zs(<def>|<if>|<do>|<module>|<class>)'$/;"	v
s:browsefilter	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	.vim/bundle/vim-haml/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buffer_prototype	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	.vim/bundle/vim-rake/plugin/rake.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_sources	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:buffer_sources = {}$/;"	v
s:cache_prototype	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:cached_files	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:cached_files = {}$/;"	v
s:check_file	.vim/bundle/vim-syntastic/syntax_checkers/erlang.vim	/^let s:check_file = expand('<sfile>:p:h') . '\/erlang_check_file.erl'$/;"	v
s:commands	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let s:commands = []$/;"	v
s:commands	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:commands	.vim/bundle/vim-rake/plugin/rake.vim	/^let s:commands = []$/;"	v
s:comment_escape	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^let s:comment_escape = '\\v^[^#]*'$/;"	v
s:cpo_save	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:cpo_save = &cpo$/;"	v
s:cterm2gui	.vim/bundle/vim-powerline/autoload/Pl/Colors.vim	/^let s:cterm2gui = {$/;"	v
s:defArgMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^let s:defMatcher = '\\%(\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+\\|override\\s\\+\\)*\\<def\\>'$/;"	v
s:defaultCommentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:default_includes	.vim/bundle/vim-syntastic/syntax_checkers/c.vim	/^let s:default_includes = [ '.', '..', 'include', 'includes',$/;"	v
s:doc_dict	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:doc_dict = {$/;"	v
s:doneFunctionDefinitions	.vim/bundle/vimerl/ftplugin/erlang.vim	/^let s:doneFunctionDefinitions=1$/;"	v
s:done_bundles	.vim/autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:efm_backtrace	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:end_pattern	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^let s:end_pattern = s:comment_escape . '\\zs<end>'$/;"	v
s:end_snippet	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:end_snippet = 0$/;"	v
s:erlangCompletionPath	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^let s:erlangCompletionPath  = expand('<sfile>:p:h') . '\/erlang_completion.erl'$/;"	v
s:erlangExternalFuncBeg	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^let s:erlangExternalFuncBeg = '\\<[0-9A-Za-z_-]\\+:[0-9A-Za-z_-]*$'$/;"	v
s:erlangLocalFuncBeg	.vim/bundle/vimerl/autoload/erlangcomplete.vim	/^let s:erlangLocalFuncBeg    = '\\(\\<[0-9A-Za-z_-]*\\|\\s*\\)$'$/;"	v
s:erlangServerName	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^let s:erlangServerName = "wrangler_vim"$/;"	v
s:errorformat	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let s:errorformat = ''$/;"	v
s:escape_chars	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>[]"$/;"	v
s:escape_chars	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	v
s:exists_md5	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:exists_vimproc	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^  let s:exists_vimproc = 0$/;"	v
s:exists_vimproc	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^  let s:exists_vimproc = 1$/;"	v
s:exists_vimproc	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^let s:exists_vimproc = globpath(&rtp, 'autoload\/vimproc.vim') != ''$/;"	v
s:extend	.vim/bundle/vim-haml/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:file	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:first_sign_id	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^let s:first_sign_id = 5000$/;"	v
s:funcNameMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:function_return_types	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:function_return_types = {}$/;"	v
s:global_candidates_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:hi_cmds	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:hi_cmds = []$/;"	v
s:hi_current_group	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:hi_current_group = {}$/;"	v
s:hi_groups	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:hi_groups = {}$/;"	v
s:hooks	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:hooks = { 'after_startup': [], 'buffer_enter': [], 'buffer_leave': [], 'after_keymap': [] }$/;"	v
s:http	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^let s:http = V.import('Web.Http')$/;"	v
s:ignore_html_errors	.vim/bundle/vim-syntastic/syntax_checkers/html.vim	/^let s:ignore_html_errors = [$/;"	v
s:imports	.vim/bundle/vim-syntastic/syntax_checkers/sass.vim	/^    let s:imports = "--compass"$/;"	v
s:imports	.vim/bundle/vim-syntastic/syntax_checkers/sass.vim	/^let s:imports = ""$/;"	v
s:include_info	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:include_info = {}$/;"	v
s:initialized	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:initialized = 0$/;"	v
s:internal_candidates_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:is_case_tolerant	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^let s:is_case_tolerant = s:is_windows || s:is_cygwin || s:is_mac$/;"	v
s:is_cygwin	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^let s:is_mac = !s:is_windows && (has('mac') || has('macunix') || has('gui_macvim') || system('uname') =~? '^darwin')$/;"	v
s:is_mac	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^let s:is_mac = !s:is_windows &&$/;"	v
s:is_mac	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^let s:is_mac = !s:is_windows && (has('mac') || has('macunix') || has('gui_macvim') || system('uname') =~? '^darwin')$/;"	v
s:is_mac	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^let s:is_mac = !s:is_windows && (has('mac') || has('macunix') || has('gui_macvim') || system('uname') =~? '^darwin')$/;"	v
s:is_windows	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:last_mps	.vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_mps	.vim/macros/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	.vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:last_words	.vim/macros/matchit.vim	/^let s:last_words = ":"$/;"	v
s:loaded	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^let s:loaded = {}$/;"	v
s:loaded_delimitMate	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:local_candidates_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:match_words	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	.vim/bundle/vim-haml/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:member_sources	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^  let s:member_sources = {}$/;"	v
s:neocomplcache_source	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:neocomplcache_source = {$/;"	v
s:next_buffer_number	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:next_sign_id	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:notslash	.vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:notslash	.vim/macros/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:nullCommentString	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:old_cpo	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:ordered_set	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^let s:ordered_set = {$/;"	v
s:path_sep_pattern	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:plugin	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^let s:plugin = {}$/;"	v
s:project_prototype	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let s:project_prototype = {}$/;"	v
s:project_prototype	.vim/bundle/vim-rake/plugin/rake.vim	/^let s:project_prototype = {}$/;"	v
s:projects	.vim/bundle/vim-bundler/plugin/bundler.vim	/^let s:projects = {}$/;"	v
s:projects	.vim/bundle/vim-rake/plugin/rake.vim	/^let s:projects = {}$/;"	v
s:property	.vim/bundle/vim-haml/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:readable_prototype	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:repo_prototype	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:returnTypeMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:running_windows	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:running_windows	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:save_cpo	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache-snippets-complete/ftplugin/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache-snippets-complete/indent/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache-snippets-complete/syntax/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-haml/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/json.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-neocomplcache/plugin/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-syntastic/syntax_checkers/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-syntastic/syntax_checkers/cpp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/macros/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_updatetime	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:save_updatetime = &updatetime$/;"	v
s:saved_terminals	.vim/bundle/vim-conque/autoload/conque_term.vim	/^        let s:saved_terminals = {}$/;"	v
s:script_candidates_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:scriptdir	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:scriptdir = expand("<sfile>:h") . '\/'$/;"	v
s:scriptdirpy	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:scriptdirpy = expand("<sfile>:h") . '\/conque_term\/'$/;"	v
s:sdir	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/cache.vim	/^let s:sdir = fnamemodify(expand('<sfile>'), ':p:h')$/;"	v
s:self_version	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:sid	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_pattern	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^let s:skip_pattern = 'getline(".") =~ "\\\\w\\\\s\\\\+if"'$/;"	v
s:snippets	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^  let s:snippets = {}$/;"	v
s:source	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:start_pattern	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^let s:start_pattern = s:comment_escape . s:block_openers$/;"	v
s:statuslines	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:statuslines = []$/;"	v
s:supported_checkers	.vim/bundle/vim-syntastic/syntax_checkers/javascript.vim	/^let s:supported_checkers = ["gjslint", "jslint", "jsl", "jshint"]$/;"	v
s:supported_checkers	.vim/bundle/vim-syntastic/syntax_checkers/json.vim	/^let s:supported_checkers = ["jsonlint", "jsonval"]$/;"	v
s:symbols	.vim/bundle/vim-powerline/autoload/Pl.vim	/^	let s:symbols = {$/;"	v
s:tag	.vim/bundle/vim-haml/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:temp_files	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:term_obj	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:term_obj = {'idx': 1, 'var': '', 'is_buffer': 1, 'active': 1, 'buffer_name': '', 'command': ''}$/;"	v
s:tree_markup_reg	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:tree_markup_reg = '^[ `|]*[\\-+~]'$/;"	v
s:tree_markup_reg	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:tree_markup_reg = '^\\([▾▸] \\| \\+[▾▸] \\| \\+\\)'$/;"	v
s:tree_up_dir_line	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_up_dir_line	.vim/bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:typeSpecMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:uname	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let s:uname = system('uname')$/;"	v
s:undo_ftplugin	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	.vim/bundle/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	.vim/bundle/vim-haml/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:utils	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^let s:utils = V.import('Web.Utils')$/;"	v
s:utils	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/http.vim	/^let s:utils = V.import('Web.Utils')$/;"	v
s:utils	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/json.vim	/^let s:utils = V.import('Web.Utils')$/;"	v
s:utils	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/xml.vim	/^let s:utils = V.import('Web.Utils')$/;"	v
s:view_types	.vim/bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,mab,liquid,haml,dryml,mn,slim',',')$/;"	v
s:windows_vk	.vim/bundle/vim-conque/autoload/conque_term.vim	/^let s:windows_vk = {$/;"	v
s:xml	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/web/html.vim	/^let s:xml = V.import('Web.Xml')$/;"	v
sanitize_path_string	.vim/ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller
save	.vim/ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
saveScreenState	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
save_all_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:save_all_cache()"{{{$/;"	f
save_cache	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:save_cache(srcname)"{{{$/;"	f
save_cpo	.vim/bundle/delimitMate/plugin/delimitMate.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	.vim/colors/candycode.vim	/^let save_cpo = &cpo$/;"	v
sbindir	.vim/ruby/command-t/Makefile	/^sbindir = $(exec_prefix)\/sbin$/;"	m
scala#ConditionalConfirm	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	.vim/bundle/vim-scala/ftplugin/scala.vim	/^function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	.vim/bundle/vim-scala/ftplugin/scala.vim	/^function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	.vim/bundle/vim-scala/ftplugin/scala.vim	/^function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	.vim/bundle/vim-scala/ftplugin/scala.vim	/^function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	.vim/bundle/vim-scala/ftplugin/scala.vim	/^function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	.vim/bundle/vim-scala/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scale_matrix	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	scale_matrix = psMat.scale(dest_width \/ source_width, dest_height \/ source_height)$/;"	v
scan	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:scan(str, pattern)$/;"	f
scanlineforuris	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
schemaEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P)$/;"	f
screen	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    screen = None$/;"	v	class:Conque
screen_encoding	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    screen_encoding = 'utf-8'$/;"	v	class:ConqueScreen
screen_height	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    screen_height = 80$/;"	v	class:ConqueScreen
screen_redraw_ct	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    screen_redraw_ct = 1$/;"	v	class:ConqueSole
screen_redraw_ct	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    screen_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
screen_top	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    screen_top = 1$/;"	v	class:ConqueScreen
screen_width	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    screen_width = 80$/;"	v	class:ConqueScreen
scrub	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:scrub(collection,item)$/;"	f
search_outof_range	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:search_outof_range(col)"{{{$/;"	f
search_snippet_range	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:search_snippet_range(start, end)"{{{$/;"	f
search_sync_placeholder	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:search_sync_placeholder(start, end, number)"{{{$/;"	f
select	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import select$/;"	i
select	.vim/ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select_a	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^function! s:select_a()$/;"	f
select_function_wrapper	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:select_function_wrapper(function_name, previous_mode)$/;"	f
select_i	.vim/bundle/vim-textobj-rubyblock/plugin/textobj/rubyblock.vim	/^function! s:select_i()$/;"	f
select_next	.vim/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller
select_next	.vim/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_prev	.vim/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller
select_prev	.vim/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
selection	.vim/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
selectiveexpand	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
send_confirm	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:send_confirm()$/;"	f
send_rpc	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:send_rpc(module, fun, args)$/;"	f
separator	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:separator()$/;"	f
serialize	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    serialize = False$/;"	v	class:ConqueSoleSharedMemory
setCommonBufOptions	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:setCommonBufOptions()$/;"	f
set_auto_completion_length	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:set_auto_completion_length(len)"{{{$/;"	f
set_bool	.vim/ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_complete_results_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:set_complete_results_words(complete_results)"{{{$/;"	f
set_context_filetype	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:set_context_filetype()"{{{$/;"	f
set_cursor	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def set_cursor(self, line, col):$/;"	m	class:Conque
set_cursor	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueScreen
set_cursor	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueSole
set_default	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:set_default(var, val)  "{{{$/;"	f
set_dictionary_helper	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value)"{{{$/;"	f
set_dictionary_helper	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)"{{{$/;"	f
set_number	.vim/ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_screen_width	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^    def set_screen_width(self, width):$/;"	m	class:ConqueScreen
set_snippet_dict	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:set_snippet_dict(snippet_pattern, snippet_dict, dup_check, snippets_file)"{{{$/;"	f
set_snippet_pattern	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:set_snippet_pattern(dict)"{{{$/;"	f
set_status	.vim/ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_window_size	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def set_window_size(self, width, height):$/;"	m	class:ConqueSoleSubprocess
setopt	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:setopt(opt,val)$/;"	f
setupStatusline	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
sharedstatedir	.vim/ruby/command-t/Makefile	/^sharedstatedir = $(prefix)\/com$/;"	m
shellesc	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:shellslash(path)$/;"	f
shellslash	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shellslash	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:shellslash(path)$/;"	f
shlex	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import shlex$/;"	i
shm	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    shm = None$/;"	v	class:ConqueSoleSharedMemory
shm_attributes	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleSubprocess
shm_attributes	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleWrapper
shm_command	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        shm_command = ConqueSoleSharedMemory(CONQUE_SOLE_COMMANDS_SIZE, 'command', mem_key, serialize=True)$/;"	v
shm_command	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_command = None$/;"	v	class:ConqueSoleSubprocess
shm_command	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_command = None$/;"	v	class:ConqueSoleWrapper
shm_input	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_input = None$/;"	v	class:ConqueSoleSubprocess
shm_input	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_input = None$/;"	v	class:ConqueSoleWrapper
shm_key	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_key = ''$/;"	v	class:ConqueSoleWrapper
shm_output	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_output = None$/;"	v	class:ConqueSoleSubprocess
shm_output	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_output = None$/;"	v	class:ConqueSoleWrapper
shm_rescroll	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleSubprocess
shm_rescroll	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleWrapper
shm_resize	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_resize = None$/;"	v	class:ConqueSoleSubprocess
shm_resize	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_resize = None$/;"	v	class:ConqueSoleWrapper
shm_stats	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    shm_stats = None$/;"	v	class:ConqueSoleSubprocess
shm_stats	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    shm_stats = None$/;"	v	class:ConqueSoleWrapper
show	.vim/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller
showMenu	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:showMenu(node)$/;"	f
show_buffer_finder	.vim/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_cursor	.vim/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow
show_file_finder	.vim/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_jump_finder	.vim/ruby/command-t/controller.rb	/^    def show_jump_finder$/;"	f	class:CommandT.Controller
show_msg	.vim/bundle/vimerl/compiler/erlang.vim	/^function! s:show_msg()$/;"	f
signal	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def signal(self, signum):$/;"	m	class:ConqueSubprocess
signal	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import signal$/;"	i
sitearch	.vim/ruby/command-t/Makefile	/^sitearch = universal-darwin11.0$/;"	m
sitearchdir	.vim/ruby/command-t/Makefile	/^sitearchdir = $(sitelibdir)\/$(sitearch)$/;"	m
sitedir	.vim/ruby/command-t/Makefile	/^sitedir = $(DESTDIR)\/Library\/Ruby\/Site$/;"	m
sitelibdir	.vim/ruby/command-t/Makefile	/^sitelibdir = $(sitedir)\/$(ruby_version)$/;"	m
sleep	.vim/bundle/vim-conque/tests/profile.py	/^from time import sleep$/;"	i
sleep_time	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^        sleep_time = 0.01$/;"	v
smart_execute_command	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:smart_execute_command(action, word)"{{{$/;"	f
sname	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
snippets_expand_or_jump	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:snippets_expand_or_jump(cur_text, col)"{{{$/;"	f
snippets_force_expand	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:snippets_force_expand(cur_text, col)"{{{$/;"	f
snippets_force_jump	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:snippets_force_jump(cur_text, col)"{{{$/;"	f
snippets_jump_or_expand	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:snippets_jump_or_expand(cur_text, col)"{{{$/;"	f
snr_prefix	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:snr_prefix(sfile)$/;"	f
sort	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:sort(list, expr)$/;"	f
sort_by	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:sort_by(list, expr)$/;"	f
sorted_matches_for	.vim/ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
source.finalize	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.finalize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.finalize()"{{{$/;"	f
source.gather_candidates	.vim/bundle/vim-neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context)"{{{$/;"	f
source.gather_candidates	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_complete_words	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_list	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.get_keyword_list(cur_keyword_str)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.get_keyword_pos	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_keyword_pos(cur_text)"{{{$/;"	f
source.hooks.on_init	.vim/bundle/vim-neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context)"{{{$/;"	f
source.hooks.on_init	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/abbrev_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/completefunc_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/keyword_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source.initialize	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.initialize()"{{{$/;"	f
source_height	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	source_height = 2545$/;"	v
source_width	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	source_width = 1272$/;"	v
span	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:span(f, xs)$/;"	f
specEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...)$/;"	f
specList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
split	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:split(path)$/;"	f
split_args	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:split_args(cur_text, cur_keyword_str)"{{{$/;"	f
split_leftright	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:split_leftright(haystack, needle)$/;"	f
split_pattern	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:split_pattern(keyword_pattern)"{{{$/;"	f
srcdir	.vim/ruby/command-t/Makefile	/^srcdir = .$/;"	m
start	.vim/bundle/vimerl/test/test.erl	/^start() -> foo(), bar().$/;"	f	module:foo
start_complete	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:start_complete(is_quick_match)$/;"	f
startswith	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
stdin	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    stdin = None$/;"	v	class:ConqueSoleSubprocess
stdout	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    stdout = None$/;"	v	class:ConqueSoleSubprocess
stop	.vim/bundle/vimerl/test/test.erl	/^stop() -> ok.$/;"	f	module:foo
str_len	.vim/ruby/command-t/match.c	/^    long    str_len;                \/\/ length of same$/;"	m	struct:__anon1	file:
str_p	.vim/ruby/command-t/match.c	/^    char    *str_p;                 \/\/ pointer to string to be searched$/;"	m	struct:__anon1	file:
strchars	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:strchars(str)"{{{$/;"	f
strchars	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^    function! s:strchars(str)$/;"	f
strchars	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:strchars(str)"{{{$/;"	f
stripMarkupFromLine	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
struct	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import struct$/;"	i
strwidthpart	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart(str, width)"{{{$/;"	f
strwidthpart	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:strwidthpart(str, width)"{{{$/;"	f
strwidthpart_reverse	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart_reverse(str, width)"{{{$/;"	f
strwidthpart_reverse	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:strwidthpart_reverse(str, width)"{{{$/;"	f
stylesheetEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	.vim/bundle/vim-conque/tests/api.vim	/^let sub = conque_term#subprocess('bash')$/;"	v
sub	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	.vim/bundle/vim-rails/plugin/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
substitute_candidate	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:substitute_candidate(candidate)"{{{$/;"	f
substitute_marker	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:substitute_marker(start, end)"{{{$/;"	f
substitute_path_separator	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:substitute_path_separator(path)"{{{$/;"	f
symbols	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^	symbols = fontforge.open(args.symbol_font)$/;"	v
synname	.vim/bundle/vim-endwise/plugin/endwise.vim	/^function! s:synname()$/;"	f
syntastic	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic#c#CheckPKG	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPKG(name, ...)$/;"	f
syntastic#c#CheckPhp	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPhp()$/;"	f
syntastic#c#CheckPython	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPython()$/;"	f
syntastic#c#CheckRuby	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckRuby()$/;"	f
syntastic#c#SearchHeaders	.vim/bundle/vim-syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#SearchHeaders()$/;"	f
syntastic_auto_jump	.vim/bundle/vim-syntastic/plugin/syntastic.vim	/^    let syntastic_auto_jump=0$/;"	v
syntaxfile	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:syntaxfile()$/;"	f
syntaxlock	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:syntaxlock()$/;"	f
sys	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import sys$/;"	i
sys	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^import sys$/;"	i
sys	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^import sys$/;"	i
sys	.vim/bundle/vim-powerline/fontpatcher/fontpatcher	/^import sys$/;"	i
sysconfdir	.vim/ruby/command-t/Makefile	/^sysconfdir = $(prefix)\/etc$/;"	m
system	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:system(str, ...)"{{{$/;"	f
tabpagevar	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
tabstops	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    tabstops = []$/;"	v	class:Conque
target_prefix	.vim/ruby/command-t/Makefile	/^target_prefix = $/;"	m
taskEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:taskEdit(cmd,...)$/;"	f
taskList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:taskList(A,L,P)$/;"	f
tcomment#CollectFileTypes	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#FileTypes	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#FileTypes(ArgLead, CmdLine, CursorPos)$/;"	f
tcomment#Operator	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	.vim/bundle/vim-tcomment/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcount	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^    let tcount += 1$/;"	v
tcount	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^let tcount = 1$/;"	v
tcount	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^    let tcount += 1$/;"	v
tcount	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^let tcount = 1$/;"	v
tcount	.vim/bundle/delimitMate/test/expand_cr.vim	/^  let tcount += 1$/;"	v
tcount	.vim/bundle/delimitMate/test/expand_cr.vim	/^let tcount = 1$/;"	v
term_obj.close	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! s:term_obj.close() dict " {{{$/;"	f
term_obj.focus	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! s:term_obj.focus() dict " {{{$/;"	f
term_obj.read	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! s:term_obj.read(...) dict " {{{$/;"	f
term_obj.set_callback	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! s:term_obj.set_callback(callback_func) dict " {{{$/;"	f
term_obj.write	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! s:term_obj.write(...) dict " {{{$/;"	f
term_obj.writeln	.vim/bundle/vim-conque/autoload/conque_term.vim	/^function! s:term_obj.writeln(...) dict " {{{$/;"	f
termios	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import termios$/;"	i
testsnumber	.vim/bundle/delimitMate/test/autoclose_matchpairs.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	.vim/bundle/delimitMate/test/autoclose_quotes.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^"'''))$/;"	v
testsnumber	.vim/bundle/delimitMate/test/expand_cr.vim	/^let testsnumber = len(filter(copy(lines), 'v:val =~ ''^=\\{80}$'''))$/;"	v
textobj#user#define	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#define(pat0, pat1, pat2, guideline)  "{{{2$/;"	f
textobj#user#move	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#move(pattern, flags, previous_mode)$/;"	f
textobj#user#plugin	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#plugin(plugin_name, obj_specs)  "{{{2$/;"	f
textobj#user#select	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#select(pattern, flags, previous_mode)$/;"	f
textobj#user#select_pair	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#select_pair(pattern1, pattern2, flags, previous_mode)$/;"	f
throw	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:throw(string) abort$/;"	f
throw	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:throw(string) abort$/;"	f
time	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^import time # DEBUG$/;"	i
time	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_communicator.py	/^import time$/;"	i
time	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^import time$/;"	i
time	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^import time$/;"	i
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_INFO
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_UNION
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CONSOLE_SCREEN_BUFFER_INFO
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:COORD
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:FOCUS_EVENT_RECORD
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_RECORD
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_UNION
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:KEY_EVENT_RECORD
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MEMORY_BASIC_INFORMATION
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MENU_EVENT_RECORD
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MOUSE_EVENT_RECORD
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:PROCESS_INFORMATION
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SECURITY_ATTRIBUTES
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SMALL_RECT
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:STARTUPINFO
to_str	.vim/bundle/vim-conque/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:WINDOW_BUFFER_SIZE_RECORD
toggle	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggleIgnoreFilter	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	f
toggle_focus	.vim/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller
top	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    top = 1 # relative to top of screen$/;"	v	class:Conque
top	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    top = 0$/;"	v	class:ConqueSoleSubprocess
topdir	.vim/ruby/command-t/Makefile	/^topdir = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/lib\/ruby\/1.8\/universal-darwin11.0$/;"	m
traceback	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^import traceback # DEBUG$/;"	i
translate_color	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def translate_color(self, attr):$/;"	m	class:ConqueSole
treeExistsForBuf	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForTab	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
trigger	.vim/bundle/neocomplcache-snippets-complete/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:trigger(function)"{{{$/;"	f
trim	.vim/bundle/vimerl/ftplugin/erlang_refactor.vim	/^function! s:trim(text)$/;"	f
truncate	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:truncate(str, width)"{{{$/;"	f
truncate	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:truncate(str, width)"{{{$/;"	f
truncate_smart	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)"{{{$/;"	f
truncated_match	.vim/ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow
try	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:try(cmd) abort$/;"	f
tty	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^import tty$/;"	i
u	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^def u(str_val, str_encoding='utf-8', errors='strict'):$/;"	f
uchr	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^def uchr(str):$/;"	f
unfocus	.vim/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	.vim/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
unify_separator	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/filepath.vim	/^function! s:unify_separator(path)$/;"	f
uniq	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/list.vim	/^function! s:uniq(list, ...)$/;"	f
uniq	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list)$/;"	f
unique	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	f
unite#sources#file_include#define	.vim/bundle/vim-neocomplcache/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplcache#define	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#define() "{{{$/;"	f
unite#sources#neocomplcache#start_complete	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_complete() "{{{$/;"	f
unite#sources#neocomplcache#start_quick_match	.vim/bundle/vim-neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_quick_match() "{{{$/;"	f
unite#sources#snippet#define	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! unite#sources#snippet#define() "{{{$/;"	f
unite#sources#snippet#start_complete	.vim/bundle/vim-neocomplcache/autoload/unite/sources/snippet.vim	/^function! unite#sources#snippet#start_complete() "{{{$/;"	f
unite_patterns	.vim/bundle/vim-neocomplcache/autoload/neocomplcache.vim	/^function! s:unite_patterns(pattern_var, filetype)"{{{$/;"	f
unittestEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:unittestEdit(cmd,...)$/;"	f
unittestList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:unittestList(A,L,P)$/;"	f
unload	.vim/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller
unload	.vim/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unlock	.vim/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow
unwrap_tables	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    unwrap_tables = True$/;"	v	class:Conque
upDir	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
upDirCurrentRootClosed	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	.vim/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_window_size	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def update_window_size(self, force=False):$/;"	m	class:Conque
update_window_size	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def update_window_size(self):$/;"	m	class:ConqueSole
vendorarchdir	.vim/ruby/command-t/Makefile	/^vendorarchdir = $(vendorlibdir)\/$(sitearch)$/;"	m
vendordir	.vim/ruby/command-t/Makefile	/^vendordir = $(libdir)\/ruby\/vendor_ruby$/;"	m
vendorlibdir	.vim/ruby/command-t/Makefile	/^vendorlibdir = $(vendordir)\/$(ruby_version)$/;"	m
version	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/ordered_set.vim	/^function! s:version() "{{{$/;"	f
viewEdit	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
viewspattern	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:viewspattern()$/;"	f
vim	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^import vim$/;"	i
vim	.vim/bundle/vim-conque/autoload/conque_term/conque_globals.py	/^    import vim$/;"	i
vim	.vim/bundle/vim-conque/autoload/conque_term/conque_screen.py	/^import vim$/;"	i
vim	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^import vim$/;"	i
vim	.vim/bundle/vim-conque/tests/profile.py	/^import vim$/;"	i
vital#	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	.vim/bundle/vim-neocomplcache/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vt100?	.vim/ruby/command-t/controller.rb	/^    def vt100?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
warn	.vim/bundle/vim-bundler/plugin/bundler.vim	/^function! s:warn(str)$/;"	f
warn	.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warn	.vim/bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warn	.vim/bundle/vim-rake/plugin/rake.vim	/^function! s:warn(str)$/;"	f
warn	.vim/ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
wcswidth	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcswidth(str)"{{{$/;"	f
wcswidth	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/prelude.vim	/^  function! s:wcswidth(str)"{{{$/;"	f
wcwidth	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(str)"{{{$/;"	f
wcwidth	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(ucs)"{{{$/;"	f
window_bottom	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    window_bottom = None$/;"	v	class:ConqueSole
window_height	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    window_height = 40$/;"	v	class:ConqueSoleSubprocess
window_resize	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSoleWrapper
window_resize	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSubprocess
window_top	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    window_top = None$/;"	v	class:ConqueSole
window_width	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    window_width = 160$/;"	v	class:ConqueSoleSubprocess
wise	.vim/bundle/vim-textobj-user/autoload/textobj/user.vim	/^function! s:wise(default)$/;"	f
word_caching	.vim/bundle/vim-neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:word_caching(srcname)"{{{$/;"	f
working_columns	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    working_columns = 80 # can be changed by CSI ? 3 l\/h$/;"	v	class:Conque
working_lines	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    working_lines = 24 # can be changed by CSI r$/;"	v	class:Conque
wrap	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/data/string.vim	/^function! s:wrap(str)$/;"	f
wrap	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/functor.vim	/^function! s:wrap(callable)$/;"	f
wrap	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_cursor	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    wrap_cursor = False$/;"	v	class:Conque
wrapreg	.vim/bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
write	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def write(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_shared_memory.py	/^    def write(self, text, start=0):$/;"	m	class:ConqueSoleSharedMemory
write	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def write(self):$/;"	m	class:ConqueSoleSubprocess
write	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def write(self, text):$/;"	m	class:ConqueSoleWrapper
write	.vim/bundle/vim-conque/autoload/conque_term/conque_subprocess.py	/^    def write(self, input):$/;"	m	class:ConqueSubprocess
write_buffered_ord	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def write_buffered_ord(self, chr):$/;"	m	class:Conque
write_expr	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def write_expr(self, expr, set_cursor=True, read=True):$/;"	m	class:Conque
write_latin1	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def write_latin1(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_ord	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def write_ord(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_plain	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def write_plain(self, text):$/;"	m	class:ConqueSoleSubprocess
write_vk	.vim/bundle/vim-conque/autoload/conque_term/conque_sole.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSole
write_vk	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_subprocess.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleSubprocess
write_vk	.vim/bundle/vim-conque/autoload/conque_term/conque_sole_wrapper.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleWrapper
writefile	.vim/bundle/vim-neocomplcache/autoload/vital/_f9b384/system/cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
xterm?	.vim/ruby/command-t/controller.rb	/^    def xterm?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
xterm_to_rgb	.vim/bundle/vim-conque/autoload/conque_term/conque.py	/^    def xterm_to_rgb(self, color_code):$/;"	m	class:Conque
yS	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	.vim/bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
